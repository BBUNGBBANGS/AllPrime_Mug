ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB49:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "os.h"
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** ADC_HandleTypeDef hadc;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  48:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  49:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  50:Core/Src/main.c **** TIM_HandleTypeDef htim16;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** UART_HandleTypeDef huart1;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/main.c **** void SystemClock_Config(void);
  60:Core/Src/main.c **** static void MX_GPIO_Init(void);
  61:Core/Src/main.c **** static void MX_ADC_Init(void);
  62:Core/Src/main.c **** static void MX_TIM16_Init(void);
  63:Core/Src/main.c **** static void MX_I2C1_Init(void);
  64:Core/Src/main.c **** static void MX_TIM1_Init(void);
  65:Core/Src/main.c **** static void MX_TIM14_Init(void);
  66:Core/Src/main.c **** static void MX_TIM3_Init(void);
  67:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  68:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  73:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /**
  78:Core/Src/main.c ****   * @brief  The application entry point.
  79:Core/Src/main.c ****   * @retval int
  80:Core/Src/main.c ****   */
  81:Core/Src/main.c **** int main(void)
  82:Core/Src/main.c **** {
  83:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****     /* USER CODE END 1 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  90:Core/Src/main.c ****     HAL_Init();
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****     /* USER CODE BEGIN Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****     /* USER CODE END Init */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****     /* Configure the system clock */
  97:Core/Src/main.c ****     SystemClock_Config();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****     /* USER CODE END SysInit */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****     /* Initialize all configured peripherals */
 104:Core/Src/main.c ****     MX_GPIO_Init();
 105:Core/Src/main.c ****     MX_ADC_Init();
 106:Core/Src/main.c ****     MX_TIM16_Init();
 107:Core/Src/main.c ****  	  //MX_I2C1_Init();
 108:Core/Src/main.c ****  	  MX_TIM1_Init();
 109:Core/Src/main.c ****   	MX_TIM14_Init();
 110:Core/Src/main.c ****     MX_TIM3_Init();
 111:Core/Src/main.c ****     MX_USART1_UART_Init();
 112:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 113:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim1);
 114:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim3);
 115:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim14);
 116:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim16);
 117:Core/Src/main.c **** 	  Os_Init_Task();
 118:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_1);
 119:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_2);
 120:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_1);
 121:Core/Src/main.c ****     HAL_TIMEx_PWMN_Start(&htim1,TIM_CHANNEL_3);
 122:Core/Src/main.c ****     /* USER CODE END 2 */
 123:Core/Src/main.c ****     /* Infinite loop */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 126:Core/Src/main.c ****     while (1)
 127:Core/Src/main.c ****     {
 128:Core/Src/main.c ****         Os_Handler();
 129:Core/Src/main.c ****     }
 130:Core/Src/main.c ****     /* USER CODE END 3 */
 131:Core/Src/main.c **** }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** /**
 134:Core/Src/main.c ****   * @brief System Clock Configuration
 135:Core/Src/main.c ****   * @retval None
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c **** void SystemClock_Config(void)
 138:Core/Src/main.c **** {
 139:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 141:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 144:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI14;
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 4


 148:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 155:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 156:Core/Src/main.c ****   {
 157:Core/Src/main.c ****     Error_Handler();
 158:Core/Src/main.c ****   }
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 161:Core/Src/main.c ****   */
 162:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 163:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     Error_Handler();
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1;
 173:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 174:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 175:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 176:Core/Src/main.c ****   {
 177:Core/Src/main.c ****     Error_Handler();
 178:Core/Src/main.c ****   }
 179:Core/Src/main.c **** }
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /**
 182:Core/Src/main.c ****   * @brief ADC Initialization Function
 183:Core/Src/main.c ****   * @param None
 184:Core/Src/main.c ****   * @retval None
 185:Core/Src/main.c ****   */
 186:Core/Src/main.c **** static void MX_ADC_Init(void)
 187:Core/Src/main.c **** {
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 0 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* USER CODE END ADC_Init 0 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 1 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE END ADC_Init 1 */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 200:Core/Src/main.c ****   */
 201:Core/Src/main.c ****   hadc.Instance = ADC1;
 202:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 203:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 204:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 5


 205:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 206:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 207:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 208:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 209:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 210:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 211:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 212:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 213:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 214:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 215:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 216:Core/Src/main.c ****   {
 217:Core/Src/main.c ****     Error_Handler();
 218:Core/Src/main.c ****   }
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 221:Core/Src/main.c ****   */
 222:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 223:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 224:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 225:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 226:Core/Src/main.c ****   {
 227:Core/Src/main.c ****     Error_Handler();
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 231:Core/Src/main.c ****   */
 232:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 233:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 234:Core/Src/main.c ****   {
 235:Core/Src/main.c ****     Error_Handler();
 236:Core/Src/main.c ****   }
 237:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 2 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE END ADC_Init 2 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** /**
 244:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 245:Core/Src/main.c ****   * @param None
 246:Core/Src/main.c ****   * @retval None
 247:Core/Src/main.c ****   */
 248:Core/Src/main.c **** static void MX_I2C1_Init(void)
 249:Core/Src/main.c **** {
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 258:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 259:Core/Src/main.c ****   hi2c1.Init.Timing = 0x2000090E;
 260:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 261:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 6


 262:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 263:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 264:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 265:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 266:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 267:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 268:Core/Src/main.c ****   {
 269:Core/Src/main.c ****     Error_Handler();
 270:Core/Src/main.c ****   }
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /** Configure Analogue filter
 273:Core/Src/main.c ****   */
 274:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 275:Core/Src/main.c ****   {
 276:Core/Src/main.c ****     Error_Handler();
 277:Core/Src/main.c ****   }
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /** Configure Digital filter
 280:Core/Src/main.c ****   */
 281:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 282:Core/Src/main.c ****   {
 283:Core/Src/main.c ****     Error_Handler();
 284:Core/Src/main.c ****   }
 285:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** }
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** /**
 292:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 293:Core/Src/main.c ****   * @param None
 294:Core/Src/main.c ****   * @retval None
 295:Core/Src/main.c ****   */
 296:Core/Src/main.c **** static void MX_TIM1_Init(void)
 297:Core/Src/main.c **** {
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 304:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 305:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 306:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 311:Core/Src/main.c ****   htim1.Instance = TIM1;
 312:Core/Src/main.c ****   htim1.Init.Prescaler = 959;
 313:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 314:Core/Src/main.c ****   htim1.Init.Period = 1000;
 315:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 316:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 317:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 318:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 7


 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     Error_Handler();
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 323:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 324:Core/Src/main.c ****   {
 325:Core/Src/main.c ****     Error_Handler();
 326:Core/Src/main.c ****   }
 327:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 328:Core/Src/main.c ****   {
 329:Core/Src/main.c ****     Error_Handler();
 330:Core/Src/main.c ****   }
 331:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 332:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 333:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 334:Core/Src/main.c ****   {
 335:Core/Src/main.c ****     Error_Handler();
 336:Core/Src/main.c ****   }
 337:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 338:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 339:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 340:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 341:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 342:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 343:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 344:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 345:Core/Src/main.c ****   {
 346:Core/Src/main.c ****     Error_Handler();
 347:Core/Src/main.c ****   }
 348:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 349:Core/Src/main.c ****   {
 350:Core/Src/main.c ****     Error_Handler();
 351:Core/Src/main.c ****   }
 352:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 353:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 354:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 355:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 356:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 357:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 358:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 359:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 360:Core/Src/main.c ****   {
 361:Core/Src/main.c ****     Error_Handler();
 362:Core/Src/main.c ****   }
 363:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 366:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** }
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** /**
 371:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 372:Core/Src/main.c ****   * @param None
 373:Core/Src/main.c ****   * @retval None
 374:Core/Src/main.c ****   */
 375:Core/Src/main.c **** static void MX_TIM3_Init(void)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 8


 376:Core/Src/main.c **** {
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 383:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 384:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 389:Core/Src/main.c ****   htim3.Instance = TIM3;
 390:Core/Src/main.c ****   htim3.Init.Prescaler = 479;
 391:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 392:Core/Src/main.c ****   htim3.Init.Period = 1000;
 393:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 394:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 395:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 396:Core/Src/main.c ****   {
 397:Core/Src/main.c ****     Error_Handler();
 398:Core/Src/main.c ****   }
 399:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 400:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 401:Core/Src/main.c ****   {
 402:Core/Src/main.c ****     Error_Handler();
 403:Core/Src/main.c ****   }
 404:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 405:Core/Src/main.c ****   {
 406:Core/Src/main.c ****     Error_Handler();
 407:Core/Src/main.c ****   }
 408:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 409:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 410:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 411:Core/Src/main.c ****   {
 412:Core/Src/main.c ****     Error_Handler();
 413:Core/Src/main.c ****   }
 414:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 415:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 416:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 417:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 418:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 419:Core/Src/main.c ****   {
 420:Core/Src/main.c ****     Error_Handler();
 421:Core/Src/main.c ****   }
 422:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 423:Core/Src/main.c ****   {
 424:Core/Src/main.c ****     Error_Handler();
 425:Core/Src/main.c ****   }
 426:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 427:Core/Src/main.c **** 
 428:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 429:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 430:Core/Src/main.c **** 
 431:Core/Src/main.c **** }
 432:Core/Src/main.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 9


 433:Core/Src/main.c **** /**
 434:Core/Src/main.c ****   * @brief TIM14 Initialization Function
 435:Core/Src/main.c ****   * @param None
 436:Core/Src/main.c ****   * @retval None
 437:Core/Src/main.c ****   */
 438:Core/Src/main.c **** static void MX_TIM14_Init(void)
 439:Core/Src/main.c **** {
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
 446:Core/Src/main.c **** 
 447:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
 448:Core/Src/main.c ****   htim14.Instance = TIM14;
 449:Core/Src/main.c ****   htim14.Init.Prescaler = 479;
 450:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 451:Core/Src/main.c ****   htim14.Init.Period = 1000;
 452:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 453:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 454:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 455:Core/Src/main.c ****   {
 456:Core/Src/main.c ****     Error_Handler();
 457:Core/Src/main.c ****   }
 458:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
 461:Core/Src/main.c **** 
 462:Core/Src/main.c **** }
 463:Core/Src/main.c **** 
 464:Core/Src/main.c **** /**
 465:Core/Src/main.c ****   * @brief TIM16 Initialization Function
 466:Core/Src/main.c ****   * @param None
 467:Core/Src/main.c ****   * @retval None
 468:Core/Src/main.c ****   */
 469:Core/Src/main.c **** static void MX_TIM16_Init(void)
 470:Core/Src/main.c **** {
 471:Core/Src/main.c **** 
 472:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 0 */
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /* USER CODE END TIM16_Init 0 */
 475:Core/Src/main.c **** 
 476:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 1 */
 477:Core/Src/main.c **** 
 478:Core/Src/main.c ****   /* USER CODE END TIM16_Init 1 */
 479:Core/Src/main.c ****   htim16.Instance = TIM16;
 480:Core/Src/main.c ****   htim16.Init.Prescaler = 47;
 481:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 482:Core/Src/main.c ****   htim16.Init.Period = 100;
 483:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 484:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 485:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 486:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 487:Core/Src/main.c ****   {
 488:Core/Src/main.c ****     Error_Handler();
 489:Core/Src/main.c ****   }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 10


 490:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 2 */
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****   /* USER CODE END TIM16_Init 2 */
 493:Core/Src/main.c **** 
 494:Core/Src/main.c **** }
 495:Core/Src/main.c **** 
 496:Core/Src/main.c **** /**
 497:Core/Src/main.c ****   * @brief USART1 Initialization Function
 498:Core/Src/main.c ****   * @param None
 499:Core/Src/main.c ****   * @retval None
 500:Core/Src/main.c ****   */
 501:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 502:Core/Src/main.c **** {
 503:Core/Src/main.c **** 
 504:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 505:Core/Src/main.c **** 
 506:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 511:Core/Src/main.c ****   huart1.Instance = USART1;
 512:Core/Src/main.c ****   huart1.Init.BaudRate = 38400;
 513:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 514:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 515:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 516:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 517:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 518:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 519:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 520:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 521:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 522:Core/Src/main.c ****   {
 523:Core/Src/main.c ****     Error_Handler();
 524:Core/Src/main.c ****   }
 525:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 526:Core/Src/main.c **** 
 527:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 528:Core/Src/main.c **** 
 529:Core/Src/main.c **** }
 530:Core/Src/main.c **** 
 531:Core/Src/main.c **** /**
 532:Core/Src/main.c ****   * @brief GPIO Initialization Function
 533:Core/Src/main.c ****   * @param None
 534:Core/Src/main.c ****   * @retval None
 535:Core/Src/main.c ****   */
 536:Core/Src/main.c **** static void MX_GPIO_Init(void)
 537:Core/Src/main.c **** {
  26              		.loc 1 537 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 11


  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 CE46     		mov	lr, r9
  39 0004 4746     		mov	r7, r8
  40 0006 80B5     		push	{r7, lr}
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 28
  43              		.cfi_offset 8, -28
  44              		.cfi_offset 9, -24
  45 0008 89B0     		sub	sp, sp, #36
  46              	.LCFI2:
  47              		.cfi_def_cfa_offset 64
 538:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  48              		.loc 1 538 3 view .LVU1
  49              		.loc 1 538 20 is_stmt 0 view .LVU2
  50 000a 1422     		movs	r2, #20
  51 000c 0021     		movs	r1, #0
  52 000e 03A8     		add	r0, sp, #12
  53 0010 FFF7FEFF 		bl	memset
  54              	.LVL0:
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 541:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  55              		.loc 1 541 3 is_stmt 1 view .LVU3
  56              	.LBB4:
  57              		.loc 1 541 3 view .LVU4
  58              		.loc 1 541 3 view .LVU5
  59 0014 2E4B     		ldr	r3, .L2
  60 0016 5969     		ldr	r1, [r3, #20]
  61 0018 8020     		movs	r0, #128
  62 001a 0003     		lsls	r0, r0, #12
  63 001c 0143     		orrs	r1, r0
  64 001e 5961     		str	r1, [r3, #20]
  65              		.loc 1 541 3 view .LVU6
  66 0020 5A69     		ldr	r2, [r3, #20]
  67 0022 0240     		ands	r2, r0
  68 0024 0092     		str	r2, [sp]
  69              		.loc 1 541 3 view .LVU7
  70 0026 009A     		ldr	r2, [sp]
  71              	.LBE4:
  72              		.loc 1 541 3 view .LVU8
 542:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  73              		.loc 1 542 3 view .LVU9
  74              	.LBB5:
  75              		.loc 1 542 3 view .LVU10
  76              		.loc 1 542 3 view .LVU11
  77 0028 5969     		ldr	r1, [r3, #20]
  78 002a 8020     		movs	r0, #128
  79 002c 8002     		lsls	r0, r0, #10
  80 002e 0143     		orrs	r1, r0
  81 0030 5961     		str	r1, [r3, #20]
  82              		.loc 1 542 3 view .LVU12
  83 0032 5A69     		ldr	r2, [r3, #20]
  84 0034 0240     		ands	r2, r0
  85 0036 0192     		str	r2, [sp, #4]
  86              		.loc 1 542 3 view .LVU13
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 12


  87 0038 019A     		ldr	r2, [sp, #4]
  88              	.LBE5:
  89              		.loc 1 542 3 view .LVU14
 543:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  90              		.loc 1 543 3 view .LVU15
  91              	.LBB6:
  92              		.loc 1 543 3 view .LVU16
  93              		.loc 1 543 3 view .LVU17
  94 003a 5A69     		ldr	r2, [r3, #20]
  95 003c 8021     		movs	r1, #128
  96 003e C902     		lsls	r1, r1, #11
  97 0040 0A43     		orrs	r2, r1
  98 0042 5A61     		str	r2, [r3, #20]
  99              		.loc 1 543 3 view .LVU18
 100 0044 5B69     		ldr	r3, [r3, #20]
 101 0046 0B40     		ands	r3, r1
 102 0048 0293     		str	r3, [sp, #8]
 103              		.loc 1 543 3 view .LVU19
 104 004a 029B     		ldr	r3, [sp, #8]
 105              	.LBE6:
 106              		.loc 1 543 3 view .LVU20
 544:Core/Src/main.c **** 
 545:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 546:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 107              		.loc 1 546 3 view .LVU21
 108 004c 8024     		movs	r4, #128
 109 004e A401     		lsls	r4, r4, #6
 110 0050 204B     		ldr	r3, .L2+4
 111 0052 9946     		mov	r9, r3
 112 0054 0022     		movs	r2, #0
 113 0056 2100     		movs	r1, r4
 114 0058 1800     		movs	r0, r3
 115 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 116              	.LVL1:
 547:Core/Src/main.c **** 
 548:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 549:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 117              		.loc 1 549 3 view .LVU22
 118 005e 9026     		movs	r6, #144
 119 0060 F605     		lsls	r6, r6, #23
 120 0062 0022     		movs	r2, #0
 121 0064 0221     		movs	r1, #2
 122 0066 3000     		movs	r0, r6
 123 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 124              	.LVL2:
 550:Core/Src/main.c **** 
 551:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 552:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_12|GPIO_PIN_14
 125              		.loc 1 552 3 view .LVU23
 126 006c 1A4B     		ldr	r3, .L2+8
 127 006e 9846     		mov	r8, r3
 128 0070 1A4F     		ldr	r7, .L2+12
 129 0072 0022     		movs	r2, #0
 130 0074 1900     		movs	r1, r3
 131 0076 3800     		movs	r0, r7
 132 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 133              	.LVL3:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 13


 553:Core/Src/main.c ****                           |GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_8
 554:Core/Src/main.c ****                           |GPIO_PIN_9, GPIO_PIN_RESET);
 555:Core/Src/main.c **** 
 556:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 557:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 134              		.loc 1 557 3 view .LVU24
 135              		.loc 1 557 23 is_stmt 0 view .LVU25
 136 007c 0394     		str	r4, [sp, #12]
 558:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 137              		.loc 1 558 3 is_stmt 1 view .LVU26
 138              		.loc 1 558 24 is_stmt 0 view .LVU27
 139 007e 0125     		movs	r5, #1
 140 0080 0495     		str	r5, [sp, #16]
 559:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 141              		.loc 1 559 3 is_stmt 1 view .LVU28
 142              		.loc 1 559 24 is_stmt 0 view .LVU29
 143 0082 0024     		movs	r4, #0
 144 0084 0594     		str	r4, [sp, #20]
 560:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 145              		.loc 1 560 3 is_stmt 1 view .LVU30
 146              		.loc 1 560 25 is_stmt 0 view .LVU31
 147 0086 0694     		str	r4, [sp, #24]
 561:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 148              		.loc 1 561 3 is_stmt 1 view .LVU32
 149 0088 03A9     		add	r1, sp, #12
 150 008a 4846     		mov	r0, r9
 151 008c FFF7FEFF 		bl	HAL_GPIO_Init
 152              	.LVL4:
 562:Core/Src/main.c **** 
 563:Core/Src/main.c ****   /*Configure GPIO pin : PA1 */
 564:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1;
 153              		.loc 1 564 3 view .LVU33
 154              		.loc 1 564 23 is_stmt 0 view .LVU34
 155 0090 0223     		movs	r3, #2
 156 0092 0393     		str	r3, [sp, #12]
 565:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 157              		.loc 1 565 3 is_stmt 1 view .LVU35
 158              		.loc 1 565 24 is_stmt 0 view .LVU36
 159 0094 0495     		str	r5, [sp, #16]
 566:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 160              		.loc 1 566 3 is_stmt 1 view .LVU37
 161              		.loc 1 566 24 is_stmt 0 view .LVU38
 162 0096 0594     		str	r4, [sp, #20]
 567:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 163              		.loc 1 567 3 is_stmt 1 view .LVU39
 164              		.loc 1 567 25 is_stmt 0 view .LVU40
 165 0098 0694     		str	r4, [sp, #24]
 568:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 166              		.loc 1 568 3 is_stmt 1 view .LVU41
 167 009a 03A9     		add	r1, sp, #12
 168 009c 3000     		movs	r0, r6
 169 009e FFF7FEFF 		bl	HAL_GPIO_Init
 170              	.LVL5:
 569:Core/Src/main.c **** 
 570:Core/Src/main.c ****   /*Configure GPIO pins : PA4 PA9 PA10 PA11
 571:Core/Src/main.c ****                            PA12 PA15 */
 572:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 14


 171              		.loc 1 572 3 view .LVU42
 172              		.loc 1 572 23 is_stmt 0 view .LVU43
 173 00a2 0F4B     		ldr	r3, .L2+16
 174 00a4 0393     		str	r3, [sp, #12]
 573:Core/Src/main.c ****                           |GPIO_PIN_12|GPIO_PIN_15;
 574:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 175              		.loc 1 574 3 is_stmt 1 view .LVU44
 176              		.loc 1 574 24 is_stmt 0 view .LVU45
 177 00a6 0494     		str	r4, [sp, #16]
 575:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 178              		.loc 1 575 3 is_stmt 1 view .LVU46
 179              		.loc 1 575 24 is_stmt 0 view .LVU47
 180 00a8 0594     		str	r4, [sp, #20]
 576:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 181              		.loc 1 576 3 is_stmt 1 view .LVU48
 182 00aa 03A9     		add	r1, sp, #12
 183 00ac 3000     		movs	r0, r6
 184 00ae FFF7FEFF 		bl	HAL_GPIO_Init
 185              	.LVL6:
 577:Core/Src/main.c **** 
 578:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB12 PB14
 579:Core/Src/main.c ****                            PB3 PB4 PB5 PB8
 580:Core/Src/main.c ****                            PB9 */
 581:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_12|GPIO_PIN_14
 186              		.loc 1 581 3 view .LVU49
 187              		.loc 1 581 23 is_stmt 0 view .LVU50
 188 00b2 4346     		mov	r3, r8
 189 00b4 0393     		str	r3, [sp, #12]
 582:Core/Src/main.c ****                           |GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_8
 583:Core/Src/main.c ****                           |GPIO_PIN_9;
 584:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 190              		.loc 1 584 3 is_stmt 1 view .LVU51
 191              		.loc 1 584 24 is_stmt 0 view .LVU52
 192 00b6 0495     		str	r5, [sp, #16]
 585:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 193              		.loc 1 585 3 is_stmt 1 view .LVU53
 194              		.loc 1 585 24 is_stmt 0 view .LVU54
 195 00b8 0594     		str	r4, [sp, #20]
 586:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 196              		.loc 1 586 3 is_stmt 1 view .LVU55
 197              		.loc 1 586 25 is_stmt 0 view .LVU56
 198 00ba 0694     		str	r4, [sp, #24]
 587:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 199              		.loc 1 587 3 is_stmt 1 view .LVU57
 200 00bc 03A9     		add	r1, sp, #12
 201 00be 3800     		movs	r0, r7
 202 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 203              	.LVL7:
 588:Core/Src/main.c **** 
 589:Core/Src/main.c **** }
 204              		.loc 1 589 1 is_stmt 0 view .LVU58
 205 00c4 09B0     		add	sp, sp, #36
 206              		@ sp needed
 207 00c6 C0BC     		pop	{r6, r7}
 208 00c8 B946     		mov	r9, r7
 209 00ca B046     		mov	r8, r6
 210 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 15


 211              	.L3:
 212 00ce C046     		.align	2
 213              	.L2:
 214 00d0 00100240 		.word	1073876992
 215 00d4 00080048 		.word	1207961600
 216 00d8 3B530000 		.word	21307
 217 00dc 00040048 		.word	1207960576
 218 00e0 109E0000 		.word	40464
 219              		.cfi_endproc
 220              	.LFE49:
 222              		.section	.text.Error_Handler,"ax",%progbits
 223              		.align	1
 224              		.global	Error_Handler
 225              		.syntax unified
 226              		.code	16
 227              		.thumb_func
 229              	Error_Handler:
 230              	.LFB50:
 590:Core/Src/main.c **** 
 591:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 592:Core/Src/main.c **** 
 593:Core/Src/main.c **** /* USER CODE END 4 */
 594:Core/Src/main.c **** 
 595:Core/Src/main.c **** /**
 596:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 597:Core/Src/main.c ****   * @retval None
 598:Core/Src/main.c ****   */
 599:Core/Src/main.c **** void Error_Handler(void)
 600:Core/Src/main.c **** {
 231              		.loc 1 600 1 is_stmt 1 view -0
 232              		.cfi_startproc
 233              		@ Volatile: function does not return.
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 601:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 602:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 603:Core/Src/main.c ****   __disable_irq();
 237              		.loc 1 603 3 view .LVU60
 238              	.LBB7:
 239              	.LBI7:
 240              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 16


  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 17


  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 18


 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 241              		.loc 2 140 27 view .LVU61
 242              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 243              		.loc 2 142 3 view .LVU62
 244              		.syntax divided
 245              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 246 0000 72B6     		cpsid i
 247              	@ 0 "" 2
 248              		.thumb
 249              		.syntax unified
 250              	.L5:
 251              	.LBE8:
 252              	.LBE7:
 604:Core/Src/main.c ****   while (1)
 253              		.loc 1 604 3 discriminator 1 view .LVU63
 605:Core/Src/main.c ****   {
 606:Core/Src/main.c ****   }
 254              		.loc 1 606 3 discriminator 1 view .LVU64
 604:Core/Src/main.c ****   while (1)
 255              		.loc 1 604 9 discriminator 1 view .LVU65
 256 0002 FEE7     		b	.L5
 257              		.cfi_endproc
 258              	.LFE50:
 260              		.section	.text.MX_ADC_Init,"ax",%progbits
 261              		.align	1
 262              		.syntax unified
 263              		.code	16
 264              		.thumb_func
 266              	MX_ADC_Init:
 267              	.LFB42:
 187:Core/Src/main.c **** 
 268              		.loc 1 187 1 view -0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 16
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272 0000 00B5     		push	{lr}
 273              	.LCFI3:
 274              		.cfi_def_cfa_offset 4
 275              		.cfi_offset 14, -4
 276 0002 85B0     		sub	sp, sp, #20
 277              	.LCFI4:
 278              		.cfi_def_cfa_offset 24
 193:Core/Src/main.c **** 
 279              		.loc 1 193 3 view .LVU67
 193:Core/Src/main.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 19


 280              		.loc 1 193 26 is_stmt 0 view .LVU68
 281 0004 0C22     		movs	r2, #12
 282 0006 0021     		movs	r1, #0
 283 0008 01A8     		add	r0, sp, #4
 284 000a FFF7FEFF 		bl	memset
 285              	.LVL8:
 201:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 286              		.loc 1 201 3 is_stmt 1 view .LVU69
 201:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 287              		.loc 1 201 17 is_stmt 0 view .LVU70
 288 000e 1C48     		ldr	r0, .L13
 289 0010 1C4B     		ldr	r3, .L13+4
 290 0012 0360     		str	r3, [r0]
 202:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 291              		.loc 1 202 3 is_stmt 1 view .LVU71
 202:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 292              		.loc 1 202 28 is_stmt 0 view .LVU72
 293 0014 0023     		movs	r3, #0
 294 0016 4360     		str	r3, [r0, #4]
 203:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 295              		.loc 1 203 3 is_stmt 1 view .LVU73
 203:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 296              		.loc 1 203 24 is_stmt 0 view .LVU74
 297 0018 8360     		str	r3, [r0, #8]
 204:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 298              		.loc 1 204 3 is_stmt 1 view .LVU75
 204:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 299              		.loc 1 204 23 is_stmt 0 view .LVU76
 300 001a C360     		str	r3, [r0, #12]
 205:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 301              		.loc 1 205 3 is_stmt 1 view .LVU77
 205:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 302              		.loc 1 205 26 is_stmt 0 view .LVU78
 303 001c 0122     		movs	r2, #1
 304 001e 0261     		str	r2, [r0, #16]
 206:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 305              		.loc 1 206 3 is_stmt 1 view .LVU79
 206:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 306              		.loc 1 206 26 is_stmt 0 view .LVU80
 307 0020 0421     		movs	r1, #4
 308 0022 4161     		str	r1, [r0, #20]
 207:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 309              		.loc 1 207 3 is_stmt 1 view .LVU81
 207:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 310              		.loc 1 207 30 is_stmt 0 view .LVU82
 311 0024 0376     		strb	r3, [r0, #24]
 208:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 312              		.loc 1 208 3 is_stmt 1 view .LVU83
 208:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 313              		.loc 1 208 34 is_stmt 0 view .LVU84
 314 0026 4376     		strb	r3, [r0, #25]
 209:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 315              		.loc 1 209 3 is_stmt 1 view .LVU85
 209:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 316              		.loc 1 209 32 is_stmt 0 view .LVU86
 317 0028 8376     		strb	r3, [r0, #26]
 210:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 20


 318              		.loc 1 210 3 is_stmt 1 view .LVU87
 210:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 319              		.loc 1 210 35 is_stmt 0 view .LVU88
 320 002a C376     		strb	r3, [r0, #27]
 211:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 321              		.loc 1 211 3 is_stmt 1 view .LVU89
 211:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 322              		.loc 1 211 30 is_stmt 0 view .LVU90
 323 002c C221     		movs	r1, #194
 324 002e FF31     		adds	r1, r1, #255
 325 0030 C161     		str	r1, [r0, #28]
 212:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 326              		.loc 1 212 3 is_stmt 1 view .LVU91
 212:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 327              		.loc 1 212 34 is_stmt 0 view .LVU92
 328 0032 0362     		str	r3, [r0, #32]
 213:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 329              		.loc 1 213 3 is_stmt 1 view .LVU93
 213:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 330              		.loc 1 213 35 is_stmt 0 view .LVU94
 331 0034 9E39     		subs	r1, r1, #158
 332 0036 FF39     		subs	r1, r1, #255
 333 0038 4354     		strb	r3, [r0, r1]
 214:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 334              		.loc 1 214 3 is_stmt 1 view .LVU95
 214:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 335              		.loc 1 214 21 is_stmt 0 view .LVU96
 336 003a 8262     		str	r2, [r0, #40]
 215:Core/Src/main.c ****   {
 337              		.loc 1 215 3 is_stmt 1 view .LVU97
 215:Core/Src/main.c ****   {
 338              		.loc 1 215 7 is_stmt 0 view .LVU98
 339 003c FFF7FEFF 		bl	HAL_ADC_Init
 340              	.LVL9:
 215:Core/Src/main.c ****   {
 341              		.loc 1 215 6 view .LVU99
 342 0040 0028     		cmp	r0, #0
 343 0042 17D1     		bne	.L10
 222:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 344              		.loc 1 222 3 is_stmt 1 view .LVU100
 222:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 345              		.loc 1 222 19 is_stmt 0 view .LVU101
 346 0044 0023     		movs	r3, #0
 347 0046 0193     		str	r3, [sp, #4]
 223:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 348              		.loc 1 223 3 is_stmt 1 view .LVU102
 223:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 349              		.loc 1 223 16 is_stmt 0 view .LVU103
 350 0048 8023     		movs	r3, #128
 351 004a 5B01     		lsls	r3, r3, #5
 352 004c 0293     		str	r3, [sp, #8]
 224:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 353              		.loc 1 224 3 is_stmt 1 view .LVU104
 224:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 354              		.loc 1 224 24 is_stmt 0 view .LVU105
 355 004e 8023     		movs	r3, #128
 356 0050 5B05     		lsls	r3, r3, #21
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 21


 357 0052 0393     		str	r3, [sp, #12]
 225:Core/Src/main.c ****   {
 358              		.loc 1 225 3 is_stmt 1 view .LVU106
 225:Core/Src/main.c ****   {
 359              		.loc 1 225 7 is_stmt 0 view .LVU107
 360 0054 01A9     		add	r1, sp, #4
 361 0056 0A48     		ldr	r0, .L13
 362 0058 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 363              	.LVL10:
 225:Core/Src/main.c ****   {
 364              		.loc 1 225 6 view .LVU108
 365 005c 0028     		cmp	r0, #0
 366 005e 0BD1     		bne	.L11
 232:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 367              		.loc 1 232 3 is_stmt 1 view .LVU109
 232:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 368              		.loc 1 232 19 is_stmt 0 view .LVU110
 369 0060 1023     		movs	r3, #16
 370 0062 0193     		str	r3, [sp, #4]
 233:Core/Src/main.c ****   {
 371              		.loc 1 233 3 is_stmt 1 view .LVU111
 233:Core/Src/main.c ****   {
 372              		.loc 1 233 7 is_stmt 0 view .LVU112
 373 0064 01A9     		add	r1, sp, #4
 374 0066 0648     		ldr	r0, .L13
 375 0068 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 376              	.LVL11:
 233:Core/Src/main.c ****   {
 377              		.loc 1 233 6 view .LVU113
 378 006c 0028     		cmp	r0, #0
 379 006e 05D1     		bne	.L12
 241:Core/Src/main.c **** 
 380              		.loc 1 241 1 view .LVU114
 381 0070 05B0     		add	sp, sp, #20
 382              		@ sp needed
 383 0072 00BD     		pop	{pc}
 384              	.L10:
 217:Core/Src/main.c ****   }
 385              		.loc 1 217 5 is_stmt 1 view .LVU115
 386 0074 FFF7FEFF 		bl	Error_Handler
 387              	.LVL12:
 388              	.L11:
 227:Core/Src/main.c ****   }
 389              		.loc 1 227 5 view .LVU116
 390 0078 FFF7FEFF 		bl	Error_Handler
 391              	.LVL13:
 392              	.L12:
 235:Core/Src/main.c ****   }
 393              		.loc 1 235 5 view .LVU117
 394 007c FFF7FEFF 		bl	Error_Handler
 395              	.LVL14:
 396              	.L14:
 397              		.align	2
 398              	.L13:
 399 0080 00000000 		.word	.LANCHOR0
 400 0084 00240140 		.word	1073816576
 401              		.cfi_endproc
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 22


 402              	.LFE42:
 404              		.section	.text.MX_TIM16_Init,"ax",%progbits
 405              		.align	1
 406              		.syntax unified
 407              		.code	16
 408              		.thumb_func
 410              	MX_TIM16_Init:
 411              	.LFB47:
 470:Core/Src/main.c **** 
 412              		.loc 1 470 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 10B5     		push	{r4, lr}
 417              	.LCFI5:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 4, -8
 420              		.cfi_offset 14, -4
 479:Core/Src/main.c ****   htim16.Init.Prescaler = 47;
 421              		.loc 1 479 3 view .LVU119
 479:Core/Src/main.c ****   htim16.Init.Prescaler = 47;
 422              		.loc 1 479 19 is_stmt 0 view .LVU120
 423 0002 0948     		ldr	r0, .L18
 424 0004 094B     		ldr	r3, .L18+4
 425 0006 0360     		str	r3, [r0]
 480:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 426              		.loc 1 480 3 is_stmt 1 view .LVU121
 480:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 427              		.loc 1 480 25 is_stmt 0 view .LVU122
 428 0008 2F23     		movs	r3, #47
 429 000a 4360     		str	r3, [r0, #4]
 481:Core/Src/main.c ****   htim16.Init.Period = 100;
 430              		.loc 1 481 3 is_stmt 1 view .LVU123
 481:Core/Src/main.c ****   htim16.Init.Period = 100;
 431              		.loc 1 481 27 is_stmt 0 view .LVU124
 432 000c 0023     		movs	r3, #0
 433 000e 8360     		str	r3, [r0, #8]
 482:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 434              		.loc 1 482 3 is_stmt 1 view .LVU125
 482:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 435              		.loc 1 482 22 is_stmt 0 view .LVU126
 436 0010 6422     		movs	r2, #100
 437 0012 C260     		str	r2, [r0, #12]
 483:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 438              		.loc 1 483 3 is_stmt 1 view .LVU127
 483:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 439              		.loc 1 483 29 is_stmt 0 view .LVU128
 440 0014 0361     		str	r3, [r0, #16]
 484:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 441              		.loc 1 484 3 is_stmt 1 view .LVU129
 484:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 442              		.loc 1 484 33 is_stmt 0 view .LVU130
 443 0016 4361     		str	r3, [r0, #20]
 485:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 444              		.loc 1 485 3 is_stmt 1 view .LVU131
 485:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 445              		.loc 1 485 33 is_stmt 0 view .LVU132
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 23


 446 0018 8361     		str	r3, [r0, #24]
 486:Core/Src/main.c ****   {
 447              		.loc 1 486 3 is_stmt 1 view .LVU133
 486:Core/Src/main.c ****   {
 448              		.loc 1 486 7 is_stmt 0 view .LVU134
 449 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 450              	.LVL15:
 486:Core/Src/main.c ****   {
 451              		.loc 1 486 6 view .LVU135
 452 001e 0028     		cmp	r0, #0
 453 0020 00D1     		bne	.L17
 494:Core/Src/main.c **** 
 454              		.loc 1 494 1 view .LVU136
 455              		@ sp needed
 456 0022 10BD     		pop	{r4, pc}
 457              	.L17:
 488:Core/Src/main.c ****   }
 458              		.loc 1 488 5 is_stmt 1 view .LVU137
 459 0024 FFF7FEFF 		bl	Error_Handler
 460              	.LVL16:
 461              	.L19:
 462              		.align	2
 463              	.L18:
 464 0028 00000000 		.word	htim16
 465 002c 00440140 		.word	1073824768
 466              		.cfi_endproc
 467              	.LFE47:
 469              		.section	.text.MX_TIM1_Init,"ax",%progbits
 470              		.align	1
 471              		.syntax unified
 472              		.code	16
 473              		.thumb_func
 475              	MX_TIM1_Init:
 476              	.LFB44:
 297:Core/Src/main.c **** 
 477              		.loc 1 297 1 view -0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 88
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481 0000 00B5     		push	{lr}
 482              	.LCFI6:
 483              		.cfi_def_cfa_offset 4
 484              		.cfi_offset 14, -4
 485 0002 97B0     		sub	sp, sp, #92
 486              	.LCFI7:
 487              		.cfi_def_cfa_offset 96
 303:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 488              		.loc 1 303 3 view .LVU139
 303:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 489              		.loc 1 303 26 is_stmt 0 view .LVU140
 490 0004 1022     		movs	r2, #16
 491 0006 0021     		movs	r1, #0
 492 0008 12A8     		add	r0, sp, #72
 493 000a FFF7FEFF 		bl	memset
 494              	.LVL17:
 304:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 495              		.loc 1 304 3 is_stmt 1 view .LVU141
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 24


 304:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 496              		.loc 1 304 27 is_stmt 0 view .LVU142
 497 000e 0822     		movs	r2, #8
 498 0010 0021     		movs	r1, #0
 499 0012 10A8     		add	r0, sp, #64
 500 0014 FFF7FEFF 		bl	memset
 501              	.LVL18:
 305:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 502              		.loc 1 305 3 is_stmt 1 view .LVU143
 305:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 503              		.loc 1 305 22 is_stmt 0 view .LVU144
 504 0018 1C22     		movs	r2, #28
 505 001a 0021     		movs	r1, #0
 506 001c 09A8     		add	r0, sp, #36
 507 001e FFF7FEFF 		bl	memset
 508              	.LVL19:
 306:Core/Src/main.c **** 
 509              		.loc 1 306 3 is_stmt 1 view .LVU145
 306:Core/Src/main.c **** 
 510              		.loc 1 306 34 is_stmt 0 view .LVU146
 511 0022 2022     		movs	r2, #32
 512 0024 0021     		movs	r1, #0
 513 0026 01A8     		add	r0, sp, #4
 514 0028 FFF7FEFF 		bl	memset
 515              	.LVL20:
 311:Core/Src/main.c ****   htim1.Init.Prescaler = 959;
 516              		.loc 1 311 3 is_stmt 1 view .LVU147
 311:Core/Src/main.c ****   htim1.Init.Prescaler = 959;
 517              		.loc 1 311 18 is_stmt 0 view .LVU148
 518 002c 3148     		ldr	r0, .L35
 519 002e 324B     		ldr	r3, .L35+4
 520 0030 0360     		str	r3, [r0]
 312:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 521              		.loc 1 312 3 is_stmt 1 view .LVU149
 312:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 522              		.loc 1 312 24 is_stmt 0 view .LVU150
 523 0032 324B     		ldr	r3, .L35+8
 524 0034 4360     		str	r3, [r0, #4]
 313:Core/Src/main.c ****   htim1.Init.Period = 1000;
 525              		.loc 1 313 3 is_stmt 1 view .LVU151
 313:Core/Src/main.c ****   htim1.Init.Period = 1000;
 526              		.loc 1 313 26 is_stmt 0 view .LVU152
 527 0036 0023     		movs	r3, #0
 528 0038 8360     		str	r3, [r0, #8]
 314:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 529              		.loc 1 314 3 is_stmt 1 view .LVU153
 314:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 530              		.loc 1 314 21 is_stmt 0 view .LVU154
 531 003a FA22     		movs	r2, #250
 532 003c 9200     		lsls	r2, r2, #2
 533 003e C260     		str	r2, [r0, #12]
 315:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 534              		.loc 1 315 3 is_stmt 1 view .LVU155
 315:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 535              		.loc 1 315 28 is_stmt 0 view .LVU156
 536 0040 0361     		str	r3, [r0, #16]
 316:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 25


 537              		.loc 1 316 3 is_stmt 1 view .LVU157
 316:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 538              		.loc 1 316 32 is_stmt 0 view .LVU158
 539 0042 4361     		str	r3, [r0, #20]
 317:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 540              		.loc 1 317 3 is_stmt 1 view .LVU159
 317:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 541              		.loc 1 317 32 is_stmt 0 view .LVU160
 542 0044 8033     		adds	r3, r3, #128
 543 0046 8361     		str	r3, [r0, #24]
 318:Core/Src/main.c ****   {
 544              		.loc 1 318 3 is_stmt 1 view .LVU161
 318:Core/Src/main.c ****   {
 545              		.loc 1 318 7 is_stmt 0 view .LVU162
 546 0048 FFF7FEFF 		bl	HAL_TIM_Base_Init
 547              	.LVL21:
 318:Core/Src/main.c ****   {
 548              		.loc 1 318 6 view .LVU163
 549 004c 0028     		cmp	r0, #0
 550 004e 42D1     		bne	.L28
 322:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 551              		.loc 1 322 3 is_stmt 1 view .LVU164
 322:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 552              		.loc 1 322 34 is_stmt 0 view .LVU165
 553 0050 8023     		movs	r3, #128
 554 0052 5B01     		lsls	r3, r3, #5
 555 0054 1293     		str	r3, [sp, #72]
 323:Core/Src/main.c ****   {
 556              		.loc 1 323 3 is_stmt 1 view .LVU166
 323:Core/Src/main.c ****   {
 557              		.loc 1 323 7 is_stmt 0 view .LVU167
 558 0056 12A9     		add	r1, sp, #72
 559 0058 2648     		ldr	r0, .L35
 560 005a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 561              	.LVL22:
 323:Core/Src/main.c ****   {
 562              		.loc 1 323 6 view .LVU168
 563 005e 0028     		cmp	r0, #0
 564 0060 3BD1     		bne	.L29
 327:Core/Src/main.c ****   {
 565              		.loc 1 327 3 is_stmt 1 view .LVU169
 327:Core/Src/main.c ****   {
 566              		.loc 1 327 7 is_stmt 0 view .LVU170
 567 0062 2448     		ldr	r0, .L35
 568 0064 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 569              	.LVL23:
 327:Core/Src/main.c ****   {
 570              		.loc 1 327 6 view .LVU171
 571 0068 0028     		cmp	r0, #0
 572 006a 38D1     		bne	.L30
 331:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 573              		.loc 1 331 3 is_stmt 1 view .LVU172
 331:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 574              		.loc 1 331 37 is_stmt 0 view .LVU173
 575 006c 0023     		movs	r3, #0
 576 006e 1093     		str	r3, [sp, #64]
 332:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 26


 577              		.loc 1 332 3 is_stmt 1 view .LVU174
 332:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 578              		.loc 1 332 33 is_stmt 0 view .LVU175
 579 0070 1193     		str	r3, [sp, #68]
 333:Core/Src/main.c ****   {
 580              		.loc 1 333 3 is_stmt 1 view .LVU176
 333:Core/Src/main.c ****   {
 581              		.loc 1 333 7 is_stmt 0 view .LVU177
 582 0072 10A9     		add	r1, sp, #64
 583 0074 1F48     		ldr	r0, .L35
 584 0076 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 585              	.LVL24:
 333:Core/Src/main.c ****   {
 586              		.loc 1 333 6 view .LVU178
 587 007a 0028     		cmp	r0, #0
 588 007c 31D1     		bne	.L31
 337:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 589              		.loc 1 337 3 is_stmt 1 view .LVU179
 337:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 590              		.loc 1 337 20 is_stmt 0 view .LVU180
 591 007e 6023     		movs	r3, #96
 592 0080 0993     		str	r3, [sp, #36]
 338:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 593              		.loc 1 338 3 is_stmt 1 view .LVU181
 338:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 594              		.loc 1 338 19 is_stmt 0 view .LVU182
 595 0082 0023     		movs	r3, #0
 596 0084 0A93     		str	r3, [sp, #40]
 339:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 597              		.loc 1 339 3 is_stmt 1 view .LVU183
 339:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 598              		.loc 1 339 24 is_stmt 0 view .LVU184
 599 0086 0B93     		str	r3, [sp, #44]
 340:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 600              		.loc 1 340 3 is_stmt 1 view .LVU185
 340:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 601              		.loc 1 340 25 is_stmt 0 view .LVU186
 602 0088 0C93     		str	r3, [sp, #48]
 341:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 603              		.loc 1 341 3 is_stmt 1 view .LVU187
 341:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 604              		.loc 1 341 24 is_stmt 0 view .LVU188
 605 008a 0D93     		str	r3, [sp, #52]
 342:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 606              		.loc 1 342 3 is_stmt 1 view .LVU189
 342:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 607              		.loc 1 342 25 is_stmt 0 view .LVU190
 608 008c 0E93     		str	r3, [sp, #56]
 343:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 609              		.loc 1 343 3 is_stmt 1 view .LVU191
 343:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 610              		.loc 1 343 26 is_stmt 0 view .LVU192
 611 008e 0F93     		str	r3, [sp, #60]
 344:Core/Src/main.c ****   {
 612              		.loc 1 344 3 is_stmt 1 view .LVU193
 344:Core/Src/main.c ****   {
 613              		.loc 1 344 7 is_stmt 0 view .LVU194
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 27


 614 0090 0022     		movs	r2, #0
 615 0092 09A9     		add	r1, sp, #36
 616 0094 1748     		ldr	r0, .L35
 617 0096 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 618              	.LVL25:
 344:Core/Src/main.c ****   {
 619              		.loc 1 344 6 view .LVU195
 620 009a 0028     		cmp	r0, #0
 621 009c 23D1     		bne	.L32
 348:Core/Src/main.c ****   {
 622              		.loc 1 348 3 is_stmt 1 view .LVU196
 348:Core/Src/main.c ****   {
 623              		.loc 1 348 7 is_stmt 0 view .LVU197
 624 009e 0822     		movs	r2, #8
 625 00a0 09A9     		add	r1, sp, #36
 626 00a2 1448     		ldr	r0, .L35
 627 00a4 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 628              	.LVL26:
 348:Core/Src/main.c ****   {
 629              		.loc 1 348 6 view .LVU198
 630 00a8 0028     		cmp	r0, #0
 631 00aa 1ED1     		bne	.L33
 352:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 632              		.loc 1 352 3 is_stmt 1 view .LVU199
 352:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 633              		.loc 1 352 40 is_stmt 0 view .LVU200
 634 00ac 0023     		movs	r3, #0
 635 00ae 0193     		str	r3, [sp, #4]
 353:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 636              		.loc 1 353 3 is_stmt 1 view .LVU201
 353:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 637              		.loc 1 353 41 is_stmt 0 view .LVU202
 638 00b0 0293     		str	r3, [sp, #8]
 354:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 639              		.loc 1 354 3 is_stmt 1 view .LVU203
 354:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 640              		.loc 1 354 34 is_stmt 0 view .LVU204
 641 00b2 0393     		str	r3, [sp, #12]
 355:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 642              		.loc 1 355 3 is_stmt 1 view .LVU205
 355:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 643              		.loc 1 355 33 is_stmt 0 view .LVU206
 644 00b4 0493     		str	r3, [sp, #16]
 356:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 645              		.loc 1 356 3 is_stmt 1 view .LVU207
 356:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 646              		.loc 1 356 35 is_stmt 0 view .LVU208
 647 00b6 0593     		str	r3, [sp, #20]
 357:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 648              		.loc 1 357 3 is_stmt 1 view .LVU209
 357:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 649              		.loc 1 357 38 is_stmt 0 view .LVU210
 650 00b8 8022     		movs	r2, #128
 651 00ba 9201     		lsls	r2, r2, #6
 652 00bc 0692     		str	r2, [sp, #24]
 358:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 653              		.loc 1 358 3 is_stmt 1 view .LVU211
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 28


 358:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 654              		.loc 1 358 40 is_stmt 0 view .LVU212
 655 00be 0893     		str	r3, [sp, #32]
 359:Core/Src/main.c ****   {
 656              		.loc 1 359 3 is_stmt 1 view .LVU213
 359:Core/Src/main.c ****   {
 657              		.loc 1 359 7 is_stmt 0 view .LVU214
 658 00c0 01A9     		add	r1, sp, #4
 659 00c2 0C48     		ldr	r0, .L35
 660 00c4 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 661              	.LVL27:
 359:Core/Src/main.c ****   {
 662              		.loc 1 359 6 view .LVU215
 663 00c8 0028     		cmp	r0, #0
 664 00ca 10D1     		bne	.L34
 366:Core/Src/main.c **** 
 665              		.loc 1 366 3 is_stmt 1 view .LVU216
 666 00cc 0948     		ldr	r0, .L35
 667 00ce FFF7FEFF 		bl	HAL_TIM_MspPostInit
 668              	.LVL28:
 368:Core/Src/main.c **** 
 669              		.loc 1 368 1 is_stmt 0 view .LVU217
 670 00d2 17B0     		add	sp, sp, #92
 671              		@ sp needed
 672 00d4 00BD     		pop	{pc}
 673              	.L28:
 320:Core/Src/main.c ****   }
 674              		.loc 1 320 5 is_stmt 1 view .LVU218
 675 00d6 FFF7FEFF 		bl	Error_Handler
 676              	.LVL29:
 677              	.L29:
 325:Core/Src/main.c ****   }
 678              		.loc 1 325 5 view .LVU219
 679 00da FFF7FEFF 		bl	Error_Handler
 680              	.LVL30:
 681              	.L30:
 329:Core/Src/main.c ****   }
 682              		.loc 1 329 5 view .LVU220
 683 00de FFF7FEFF 		bl	Error_Handler
 684              	.LVL31:
 685              	.L31:
 335:Core/Src/main.c ****   }
 686              		.loc 1 335 5 view .LVU221
 687 00e2 FFF7FEFF 		bl	Error_Handler
 688              	.LVL32:
 689              	.L32:
 346:Core/Src/main.c ****   }
 690              		.loc 1 346 5 view .LVU222
 691 00e6 FFF7FEFF 		bl	Error_Handler
 692              	.LVL33:
 693              	.L33:
 350:Core/Src/main.c ****   }
 694              		.loc 1 350 5 view .LVU223
 695 00ea FFF7FEFF 		bl	Error_Handler
 696              	.LVL34:
 697              	.L34:
 361:Core/Src/main.c ****   }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 29


 698              		.loc 1 361 5 view .LVU224
 699 00ee FFF7FEFF 		bl	Error_Handler
 700              	.LVL35:
 701              	.L36:
 702 00f2 C046     		.align	2
 703              	.L35:
 704 00f4 00000000 		.word	htim1
 705 00f8 002C0140 		.word	1073818624
 706 00fc BF030000 		.word	959
 707              		.cfi_endproc
 708              	.LFE44:
 710              		.section	.text.MX_TIM14_Init,"ax",%progbits
 711              		.align	1
 712              		.syntax unified
 713              		.code	16
 714              		.thumb_func
 716              	MX_TIM14_Init:
 717              	.LFB46:
 439:Core/Src/main.c **** 
 718              		.loc 1 439 1 view -0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722 0000 10B5     		push	{r4, lr}
 723              	.LCFI8:
 724              		.cfi_def_cfa_offset 8
 725              		.cfi_offset 4, -8
 726              		.cfi_offset 14, -4
 448:Core/Src/main.c ****   htim14.Init.Prescaler = 479;
 727              		.loc 1 448 3 view .LVU226
 448:Core/Src/main.c ****   htim14.Init.Prescaler = 479;
 728              		.loc 1 448 19 is_stmt 0 view .LVU227
 729 0002 0A48     		ldr	r0, .L40
 730 0004 0A4B     		ldr	r3, .L40+4
 731 0006 0360     		str	r3, [r0]
 449:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 732              		.loc 1 449 3 is_stmt 1 view .LVU228
 449:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 733              		.loc 1 449 25 is_stmt 0 view .LVU229
 734 0008 E023     		movs	r3, #224
 735 000a FF33     		adds	r3, r3, #255
 736 000c 4360     		str	r3, [r0, #4]
 450:Core/Src/main.c ****   htim14.Init.Period = 1000;
 737              		.loc 1 450 3 is_stmt 1 view .LVU230
 450:Core/Src/main.c ****   htim14.Init.Period = 1000;
 738              		.loc 1 450 27 is_stmt 0 view .LVU231
 739 000e 0023     		movs	r3, #0
 740 0010 8360     		str	r3, [r0, #8]
 451:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 741              		.loc 1 451 3 is_stmt 1 view .LVU232
 451:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 742              		.loc 1 451 22 is_stmt 0 view .LVU233
 743 0012 FA22     		movs	r2, #250
 744 0014 9200     		lsls	r2, r2, #2
 745 0016 C260     		str	r2, [r0, #12]
 452:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 746              		.loc 1 452 3 is_stmt 1 view .LVU234
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 30


 452:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 747              		.loc 1 452 29 is_stmt 0 view .LVU235
 748 0018 0361     		str	r3, [r0, #16]
 453:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 749              		.loc 1 453 3 is_stmt 1 view .LVU236
 453:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 750              		.loc 1 453 33 is_stmt 0 view .LVU237
 751 001a 8033     		adds	r3, r3, #128
 752 001c 8361     		str	r3, [r0, #24]
 454:Core/Src/main.c ****   {
 753              		.loc 1 454 3 is_stmt 1 view .LVU238
 454:Core/Src/main.c ****   {
 754              		.loc 1 454 7 is_stmt 0 view .LVU239
 755 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 756              	.LVL36:
 454:Core/Src/main.c ****   {
 757              		.loc 1 454 6 view .LVU240
 758 0022 0028     		cmp	r0, #0
 759 0024 00D1     		bne	.L39
 462:Core/Src/main.c **** 
 760              		.loc 1 462 1 view .LVU241
 761              		@ sp needed
 762 0026 10BD     		pop	{r4, pc}
 763              	.L39:
 456:Core/Src/main.c ****   }
 764              		.loc 1 456 5 is_stmt 1 view .LVU242
 765 0028 FFF7FEFF 		bl	Error_Handler
 766              	.LVL37:
 767              	.L41:
 768              		.align	2
 769              	.L40:
 770 002c 00000000 		.word	htim14
 771 0030 00200040 		.word	1073750016
 772              		.cfi_endproc
 773              	.LFE46:
 775              		.section	.text.MX_TIM3_Init,"ax",%progbits
 776              		.align	1
 777              		.syntax unified
 778              		.code	16
 779              		.thumb_func
 781              	MX_TIM3_Init:
 782              	.LFB45:
 376:Core/Src/main.c **** 
 783              		.loc 1 376 1 view -0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 56
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787 0000 00B5     		push	{lr}
 788              	.LCFI9:
 789              		.cfi_def_cfa_offset 4
 790              		.cfi_offset 14, -4
 791 0002 8FB0     		sub	sp, sp, #60
 792              	.LCFI10:
 793              		.cfi_def_cfa_offset 64
 382:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 794              		.loc 1 382 3 view .LVU244
 382:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 31


 795              		.loc 1 382 26 is_stmt 0 view .LVU245
 796 0004 1022     		movs	r2, #16
 797 0006 0021     		movs	r1, #0
 798 0008 0AA8     		add	r0, sp, #40
 799 000a FFF7FEFF 		bl	memset
 800              	.LVL38:
 383:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 801              		.loc 1 383 3 is_stmt 1 view .LVU246
 383:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 802              		.loc 1 383 27 is_stmt 0 view .LVU247
 803 000e 0822     		movs	r2, #8
 804 0010 0021     		movs	r1, #0
 805 0012 08A8     		add	r0, sp, #32
 806 0014 FFF7FEFF 		bl	memset
 807              	.LVL39:
 384:Core/Src/main.c **** 
 808              		.loc 1 384 3 is_stmt 1 view .LVU248
 384:Core/Src/main.c **** 
 809              		.loc 1 384 22 is_stmt 0 view .LVU249
 810 0018 1C22     		movs	r2, #28
 811 001a 0021     		movs	r1, #0
 812 001c 01A8     		add	r0, sp, #4
 813 001e FFF7FEFF 		bl	memset
 814              	.LVL40:
 389:Core/Src/main.c ****   htim3.Init.Prescaler = 479;
 815              		.loc 1 389 3 is_stmt 1 view .LVU250
 389:Core/Src/main.c ****   htim3.Init.Prescaler = 479;
 816              		.loc 1 389 18 is_stmt 0 view .LVU251
 817 0022 2648     		ldr	r0, .L55
 818 0024 264B     		ldr	r3, .L55+4
 819 0026 0360     		str	r3, [r0]
 390:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 820              		.loc 1 390 3 is_stmt 1 view .LVU252
 390:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 821              		.loc 1 390 24 is_stmt 0 view .LVU253
 822 0028 E023     		movs	r3, #224
 823 002a FF33     		adds	r3, r3, #255
 824 002c 4360     		str	r3, [r0, #4]
 391:Core/Src/main.c ****   htim3.Init.Period = 1000;
 825              		.loc 1 391 3 is_stmt 1 view .LVU254
 391:Core/Src/main.c ****   htim3.Init.Period = 1000;
 826              		.loc 1 391 26 is_stmt 0 view .LVU255
 827 002e 0023     		movs	r3, #0
 828 0030 8360     		str	r3, [r0, #8]
 392:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 829              		.loc 1 392 3 is_stmt 1 view .LVU256
 392:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 830              		.loc 1 392 21 is_stmt 0 view .LVU257
 831 0032 FA22     		movs	r2, #250
 832 0034 9200     		lsls	r2, r2, #2
 833 0036 C260     		str	r2, [r0, #12]
 393:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 834              		.loc 1 393 3 is_stmt 1 view .LVU258
 393:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 835              		.loc 1 393 28 is_stmt 0 view .LVU259
 836 0038 0361     		str	r3, [r0, #16]
 394:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 32


 837              		.loc 1 394 3 is_stmt 1 view .LVU260
 394:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 838              		.loc 1 394 32 is_stmt 0 view .LVU261
 839 003a 8361     		str	r3, [r0, #24]
 395:Core/Src/main.c ****   {
 840              		.loc 1 395 3 is_stmt 1 view .LVU262
 395:Core/Src/main.c ****   {
 841              		.loc 1 395 7 is_stmt 0 view .LVU263
 842 003c FFF7FEFF 		bl	HAL_TIM_Base_Init
 843              	.LVL41:
 395:Core/Src/main.c ****   {
 844              		.loc 1 395 6 view .LVU264
 845 0040 0028     		cmp	r0, #0
 846 0042 2FD1     		bne	.L49
 399:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 847              		.loc 1 399 3 is_stmt 1 view .LVU265
 399:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 848              		.loc 1 399 34 is_stmt 0 view .LVU266
 849 0044 8023     		movs	r3, #128
 850 0046 5B01     		lsls	r3, r3, #5
 851 0048 0A93     		str	r3, [sp, #40]
 400:Core/Src/main.c ****   {
 852              		.loc 1 400 3 is_stmt 1 view .LVU267
 400:Core/Src/main.c ****   {
 853              		.loc 1 400 7 is_stmt 0 view .LVU268
 854 004a 0AA9     		add	r1, sp, #40
 855 004c 1B48     		ldr	r0, .L55
 856 004e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 857              	.LVL42:
 400:Core/Src/main.c ****   {
 858              		.loc 1 400 6 view .LVU269
 859 0052 0028     		cmp	r0, #0
 860 0054 28D1     		bne	.L50
 404:Core/Src/main.c ****   {
 861              		.loc 1 404 3 is_stmt 1 view .LVU270
 404:Core/Src/main.c ****   {
 862              		.loc 1 404 7 is_stmt 0 view .LVU271
 863 0056 1948     		ldr	r0, .L55
 864 0058 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 865              	.LVL43:
 404:Core/Src/main.c ****   {
 866              		.loc 1 404 6 view .LVU272
 867 005c 0028     		cmp	r0, #0
 868 005e 25D1     		bne	.L51
 408:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 869              		.loc 1 408 3 is_stmt 1 view .LVU273
 408:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 870              		.loc 1 408 37 is_stmt 0 view .LVU274
 871 0060 0023     		movs	r3, #0
 872 0062 0893     		str	r3, [sp, #32]
 409:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 873              		.loc 1 409 3 is_stmt 1 view .LVU275
 409:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 874              		.loc 1 409 33 is_stmt 0 view .LVU276
 875 0064 0993     		str	r3, [sp, #36]
 410:Core/Src/main.c ****   {
 876              		.loc 1 410 3 is_stmt 1 view .LVU277
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 33


 410:Core/Src/main.c ****   {
 877              		.loc 1 410 7 is_stmt 0 view .LVU278
 878 0066 08A9     		add	r1, sp, #32
 879 0068 1448     		ldr	r0, .L55
 880 006a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 881              	.LVL44:
 410:Core/Src/main.c ****   {
 882              		.loc 1 410 6 view .LVU279
 883 006e 0028     		cmp	r0, #0
 884 0070 1ED1     		bne	.L52
 414:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 885              		.loc 1 414 3 is_stmt 1 view .LVU280
 414:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 886              		.loc 1 414 20 is_stmt 0 view .LVU281
 887 0072 6023     		movs	r3, #96
 888 0074 0193     		str	r3, [sp, #4]
 415:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 889              		.loc 1 415 3 is_stmt 1 view .LVU282
 415:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 890              		.loc 1 415 19 is_stmt 0 view .LVU283
 891 0076 0023     		movs	r3, #0
 892 0078 0293     		str	r3, [sp, #8]
 416:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 893              		.loc 1 416 3 is_stmt 1 view .LVU284
 416:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 894              		.loc 1 416 24 is_stmt 0 view .LVU285
 895 007a 0393     		str	r3, [sp, #12]
 417:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 896              		.loc 1 417 3 is_stmt 1 view .LVU286
 417:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 897              		.loc 1 417 24 is_stmt 0 view .LVU287
 898 007c 0593     		str	r3, [sp, #20]
 418:Core/Src/main.c ****   {
 899              		.loc 1 418 3 is_stmt 1 view .LVU288
 418:Core/Src/main.c ****   {
 900              		.loc 1 418 7 is_stmt 0 view .LVU289
 901 007e 0022     		movs	r2, #0
 902 0080 01A9     		add	r1, sp, #4
 903 0082 0E48     		ldr	r0, .L55
 904 0084 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 905              	.LVL45:
 418:Core/Src/main.c ****   {
 906              		.loc 1 418 6 view .LVU290
 907 0088 0028     		cmp	r0, #0
 908 008a 13D1     		bne	.L53
 422:Core/Src/main.c ****   {
 909              		.loc 1 422 3 is_stmt 1 view .LVU291
 422:Core/Src/main.c ****   {
 910              		.loc 1 422 7 is_stmt 0 view .LVU292
 911 008c 0422     		movs	r2, #4
 912 008e 01A9     		add	r1, sp, #4
 913 0090 0A48     		ldr	r0, .L55
 914 0092 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 915              	.LVL46:
 422:Core/Src/main.c ****   {
 916              		.loc 1 422 6 view .LVU293
 917 0096 0028     		cmp	r0, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 34


 918 0098 0ED1     		bne	.L54
 429:Core/Src/main.c **** 
 919              		.loc 1 429 3 is_stmt 1 view .LVU294
 920 009a 0848     		ldr	r0, .L55
 921 009c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 922              	.LVL47:
 431:Core/Src/main.c **** 
 923              		.loc 1 431 1 is_stmt 0 view .LVU295
 924 00a0 0FB0     		add	sp, sp, #60
 925              		@ sp needed
 926 00a2 00BD     		pop	{pc}
 927              	.L49:
 397:Core/Src/main.c ****   }
 928              		.loc 1 397 5 is_stmt 1 view .LVU296
 929 00a4 FFF7FEFF 		bl	Error_Handler
 930              	.LVL48:
 931              	.L50:
 402:Core/Src/main.c ****   }
 932              		.loc 1 402 5 view .LVU297
 933 00a8 FFF7FEFF 		bl	Error_Handler
 934              	.LVL49:
 935              	.L51:
 406:Core/Src/main.c ****   }
 936              		.loc 1 406 5 view .LVU298
 937 00ac FFF7FEFF 		bl	Error_Handler
 938              	.LVL50:
 939              	.L52:
 412:Core/Src/main.c ****   }
 940              		.loc 1 412 5 view .LVU299
 941 00b0 FFF7FEFF 		bl	Error_Handler
 942              	.LVL51:
 943              	.L53:
 420:Core/Src/main.c ****   }
 944              		.loc 1 420 5 view .LVU300
 945 00b4 FFF7FEFF 		bl	Error_Handler
 946              	.LVL52:
 947              	.L54:
 424:Core/Src/main.c ****   }
 948              		.loc 1 424 5 view .LVU301
 949 00b8 FFF7FEFF 		bl	Error_Handler
 950              	.LVL53:
 951              	.L56:
 952              		.align	2
 953              	.L55:
 954 00bc 00000000 		.word	htim3
 955 00c0 00040040 		.word	1073742848
 956              		.cfi_endproc
 957              	.LFE45:
 959              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 960              		.align	1
 961              		.syntax unified
 962              		.code	16
 963              		.thumb_func
 965              	MX_USART1_UART_Init:
 966              	.LFB48:
 502:Core/Src/main.c **** 
 967              		.loc 1 502 1 view -0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 35


 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971 0000 10B5     		push	{r4, lr}
 972              	.LCFI11:
 973              		.cfi_def_cfa_offset 8
 974              		.cfi_offset 4, -8
 975              		.cfi_offset 14, -4
 511:Core/Src/main.c ****   huart1.Init.BaudRate = 38400;
 976              		.loc 1 511 3 view .LVU303
 511:Core/Src/main.c ****   huart1.Init.BaudRate = 38400;
 977              		.loc 1 511 19 is_stmt 0 view .LVU304
 978 0002 0B48     		ldr	r0, .L60
 979 0004 0B4B     		ldr	r3, .L60+4
 980 0006 0360     		str	r3, [r0]
 512:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 981              		.loc 1 512 3 is_stmt 1 view .LVU305
 512:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 982              		.loc 1 512 24 is_stmt 0 view .LVU306
 983 0008 9623     		movs	r3, #150
 984 000a 1B02     		lsls	r3, r3, #8
 985 000c 4360     		str	r3, [r0, #4]
 513:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 986              		.loc 1 513 3 is_stmt 1 view .LVU307
 513:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 987              		.loc 1 513 26 is_stmt 0 view .LVU308
 988 000e 0023     		movs	r3, #0
 989 0010 8360     		str	r3, [r0, #8]
 514:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 990              		.loc 1 514 3 is_stmt 1 view .LVU309
 514:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 991              		.loc 1 514 24 is_stmt 0 view .LVU310
 992 0012 C360     		str	r3, [r0, #12]
 515:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 993              		.loc 1 515 3 is_stmt 1 view .LVU311
 515:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 994              		.loc 1 515 22 is_stmt 0 view .LVU312
 995 0014 0361     		str	r3, [r0, #16]
 516:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 996              		.loc 1 516 3 is_stmt 1 view .LVU313
 516:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 997              		.loc 1 516 20 is_stmt 0 view .LVU314
 998 0016 0C22     		movs	r2, #12
 999 0018 4261     		str	r2, [r0, #20]
 517:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1000              		.loc 1 517 3 is_stmt 1 view .LVU315
 517:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1001              		.loc 1 517 25 is_stmt 0 view .LVU316
 1002 001a 8361     		str	r3, [r0, #24]
 518:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1003              		.loc 1 518 3 is_stmt 1 view .LVU317
 518:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1004              		.loc 1 518 28 is_stmt 0 view .LVU318
 1005 001c C361     		str	r3, [r0, #28]
 519:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1006              		.loc 1 519 3 is_stmt 1 view .LVU319
 519:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 36


 1007              		.loc 1 519 30 is_stmt 0 view .LVU320
 1008 001e 0362     		str	r3, [r0, #32]
 520:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1009              		.loc 1 520 3 is_stmt 1 view .LVU321
 520:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1010              		.loc 1 520 38 is_stmt 0 view .LVU322
 1011 0020 4362     		str	r3, [r0, #36]
 521:Core/Src/main.c ****   {
 1012              		.loc 1 521 3 is_stmt 1 view .LVU323
 521:Core/Src/main.c ****   {
 1013              		.loc 1 521 7 is_stmt 0 view .LVU324
 1014 0022 FFF7FEFF 		bl	HAL_UART_Init
 1015              	.LVL54:
 521:Core/Src/main.c ****   {
 1016              		.loc 1 521 6 view .LVU325
 1017 0026 0028     		cmp	r0, #0
 1018 0028 00D1     		bne	.L59
 529:Core/Src/main.c **** 
 1019              		.loc 1 529 1 view .LVU326
 1020              		@ sp needed
 1021 002a 10BD     		pop	{r4, pc}
 1022              	.L59:
 523:Core/Src/main.c ****   }
 1023              		.loc 1 523 5 is_stmt 1 view .LVU327
 1024 002c FFF7FEFF 		bl	Error_Handler
 1025              	.LVL55:
 1026              	.L61:
 1027              		.align	2
 1028              	.L60:
 1029 0030 00000000 		.word	huart1
 1030 0034 00380140 		.word	1073821696
 1031              		.cfi_endproc
 1032              	.LFE48:
 1034              		.section	.text.SystemClock_Config,"ax",%progbits
 1035              		.align	1
 1036              		.global	SystemClock_Config
 1037              		.syntax unified
 1038              		.code	16
 1039              		.thumb_func
 1041              	SystemClock_Config:
 1042              	.LFB41:
 138:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1043              		.loc 1 138 1 view -0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 80
 1046              		@ frame_needed = 0, uses_anonymous_args = 0
 1047 0000 10B5     		push	{r4, lr}
 1048              	.LCFI12:
 1049              		.cfi_def_cfa_offset 8
 1050              		.cfi_offset 4, -8
 1051              		.cfi_offset 14, -4
 1052 0002 94B0     		sub	sp, sp, #80
 1053              	.LCFI13:
 1054              		.cfi_def_cfa_offset 88
 139:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1055              		.loc 1 139 3 view .LVU329
 139:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 37


 1056              		.loc 1 139 22 is_stmt 0 view .LVU330
 1057 0004 3022     		movs	r2, #48
 1058 0006 0021     		movs	r1, #0
 1059 0008 08A8     		add	r0, sp, #32
 1060 000a FFF7FEFF 		bl	memset
 1061              	.LVL56:
 140:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1062              		.loc 1 140 3 is_stmt 1 view .LVU331
 140:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1063              		.loc 1 140 22 is_stmt 0 view .LVU332
 1064 000e 1024     		movs	r4, #16
 1065 0010 1022     		movs	r2, #16
 1066 0012 0021     		movs	r1, #0
 1067 0014 04A8     		add	r0, sp, #16
 1068 0016 FFF7FEFF 		bl	memset
 1069              	.LVL57:
 141:Core/Src/main.c **** 
 1070              		.loc 1 141 3 is_stmt 1 view .LVU333
 141:Core/Src/main.c **** 
 1071              		.loc 1 141 28 is_stmt 0 view .LVU334
 1072 001a 1022     		movs	r2, #16
 1073 001c 0021     		movs	r1, #0
 1074 001e 6846     		mov	r0, sp
 1075 0020 FFF7FEFF 		bl	memset
 1076              	.LVL58:
 146:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1077              		.loc 1 146 3 is_stmt 1 view .LVU335
 146:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1078              		.loc 1 146 36 is_stmt 0 view .LVU336
 1079 0024 1223     		movs	r3, #18
 1080 0026 0893     		str	r3, [sp, #32]
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 1081              		.loc 1 147 3 is_stmt 1 view .LVU337
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 1082              		.loc 1 147 30 is_stmt 0 view .LVU338
 1083 0028 113B     		subs	r3, r3, #17
 1084 002a 0B93     		str	r3, [sp, #44]
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1085              		.loc 1 148 3 is_stmt 1 view .LVU339
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1086              		.loc 1 148 32 is_stmt 0 view .LVU340
 1087 002c 0D93     		str	r3, [sp, #52]
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 1088              		.loc 1 149 3 is_stmt 1 view .LVU341
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 1089              		.loc 1 149 41 is_stmt 0 view .LVU342
 1090 002e 0C94     		str	r4, [sp, #48]
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1091              		.loc 1 150 3 is_stmt 1 view .LVU343
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1092              		.loc 1 150 43 is_stmt 0 view .LVU344
 1093 0030 0E94     		str	r4, [sp, #56]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1094              		.loc 1 151 3 is_stmt 1 view .LVU345
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1095              		.loc 1 151 34 is_stmt 0 view .LVU346
 1096 0032 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 38


 1097 0034 1093     		str	r3, [sp, #64]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 1098              		.loc 1 152 3 is_stmt 1 view .LVU347
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1099              		.loc 1 153 3 view .LVU348
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1100              		.loc 1 153 32 is_stmt 0 view .LVU349
 1101 0036 A023     		movs	r3, #160
 1102 0038 9B03     		lsls	r3, r3, #14
 1103 003a 1293     		str	r3, [sp, #72]
 154:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1104              		.loc 1 154 3 is_stmt 1 view .LVU350
 155:Core/Src/main.c ****   {
 1105              		.loc 1 155 3 view .LVU351
 155:Core/Src/main.c ****   {
 1106              		.loc 1 155 7 is_stmt 0 view .LVU352
 1107 003c 08A8     		add	r0, sp, #32
 1108 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1109              	.LVL59:
 155:Core/Src/main.c ****   {
 1110              		.loc 1 155 6 view .LVU353
 1111 0042 0028     		cmp	r0, #0
 1112 0044 18D1     		bne	.L66
 162:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1113              		.loc 1 162 3 is_stmt 1 view .LVU354
 162:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1114              		.loc 1 162 31 is_stmt 0 view .LVU355
 1115 0046 0723     		movs	r3, #7
 1116 0048 0493     		str	r3, [sp, #16]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1117              		.loc 1 164 3 is_stmt 1 view .LVU356
 164:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1118              		.loc 1 164 34 is_stmt 0 view .LVU357
 1119 004a 053B     		subs	r3, r3, #5
 1120 004c 0593     		str	r3, [sp, #20]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1121              		.loc 1 165 3 is_stmt 1 view .LVU358
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1122              		.loc 1 165 35 is_stmt 0 view .LVU359
 1123 004e 0023     		movs	r3, #0
 1124 0050 0693     		str	r3, [sp, #24]
 166:Core/Src/main.c **** 
 1125              		.loc 1 166 3 is_stmt 1 view .LVU360
 166:Core/Src/main.c **** 
 1126              		.loc 1 166 36 is_stmt 0 view .LVU361
 1127 0052 0793     		str	r3, [sp, #28]
 168:Core/Src/main.c ****   {
 1128              		.loc 1 168 3 is_stmt 1 view .LVU362
 168:Core/Src/main.c ****   {
 1129              		.loc 1 168 7 is_stmt 0 view .LVU363
 1130 0054 0121     		movs	r1, #1
 1131 0056 04A8     		add	r0, sp, #16
 1132 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1133              	.LVL60:
 168:Core/Src/main.c ****   {
 1134              		.loc 1 168 6 view .LVU364
 1135 005c 0028     		cmp	r0, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 39


 1136 005e 0DD1     		bne	.L67
 172:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 1137              		.loc 1 172 3 is_stmt 1 view .LVU365
 172:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 1138              		.loc 1 172 38 is_stmt 0 view .LVU366
 1139 0060 2123     		movs	r3, #33
 1140 0062 0093     		str	r3, [sp]
 173:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 1141              		.loc 1 173 3 is_stmt 1 view .LVU367
 173:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 1142              		.loc 1 173 38 is_stmt 0 view .LVU368
 1143 0064 0023     		movs	r3, #0
 1144 0066 0293     		str	r3, [sp, #8]
 174:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1145              		.loc 1 174 3 is_stmt 1 view .LVU369
 174:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1146              		.loc 1 174 36 is_stmt 0 view .LVU370
 1147 0068 0393     		str	r3, [sp, #12]
 175:Core/Src/main.c ****   {
 1148              		.loc 1 175 3 is_stmt 1 view .LVU371
 175:Core/Src/main.c ****   {
 1149              		.loc 1 175 7 is_stmt 0 view .LVU372
 1150 006a 6846     		mov	r0, sp
 1151 006c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1152              	.LVL61:
 175:Core/Src/main.c ****   {
 1153              		.loc 1 175 6 view .LVU373
 1154 0070 0028     		cmp	r0, #0
 1155 0072 05D1     		bne	.L68
 179:Core/Src/main.c **** 
 1156              		.loc 1 179 1 view .LVU374
 1157 0074 14B0     		add	sp, sp, #80
 1158              		@ sp needed
 1159 0076 10BD     		pop	{r4, pc}
 1160              	.L66:
 157:Core/Src/main.c ****   }
 1161              		.loc 1 157 5 is_stmt 1 view .LVU375
 1162 0078 FFF7FEFF 		bl	Error_Handler
 1163              	.LVL62:
 1164              	.L67:
 170:Core/Src/main.c ****   }
 1165              		.loc 1 170 5 view .LVU376
 1166 007c FFF7FEFF 		bl	Error_Handler
 1167              	.LVL63:
 1168              	.L68:
 177:Core/Src/main.c ****   }
 1169              		.loc 1 177 5 view .LVU377
 1170 0080 FFF7FEFF 		bl	Error_Handler
 1171              	.LVL64:
 1172              		.cfi_endproc
 1173              	.LFE41:
 1175              		.section	.text.main,"ax",%progbits
 1176              		.align	1
 1177              		.global	main
 1178              		.syntax unified
 1179              		.code	16
 1180              		.thumb_func
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 40


 1182              	main:
 1183              	.LFB40:
  82:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 1184              		.loc 1 82 1 view -0
 1185              		.cfi_startproc
 1186              		@ Volatile: function does not return.
 1187              		@ args = 0, pretend = 0, frame = 0
 1188              		@ frame_needed = 0, uses_anonymous_args = 0
 1189 0000 70B5     		push	{r4, r5, r6, lr}
 1190              	.LCFI14:
 1191              		.cfi_def_cfa_offset 16
 1192              		.cfi_offset 4, -16
 1193              		.cfi_offset 5, -12
 1194              		.cfi_offset 6, -8
 1195              		.cfi_offset 14, -4
  90:Core/Src/main.c **** 
 1196              		.loc 1 90 5 view .LVU379
 1197 0002 FFF7FEFF 		bl	HAL_Init
 1198              	.LVL65:
  97:Core/Src/main.c **** 
 1199              		.loc 1 97 5 view .LVU380
 1200 0006 FFF7FEFF 		bl	SystemClock_Config
 1201              	.LVL66:
 104:Core/Src/main.c ****     MX_ADC_Init();
 1202              		.loc 1 104 5 view .LVU381
 1203 000a FFF7FEFF 		bl	MX_GPIO_Init
 1204              	.LVL67:
 105:Core/Src/main.c ****     MX_TIM16_Init();
 1205              		.loc 1 105 5 view .LVU382
 1206 000e FFF7FEFF 		bl	MX_ADC_Init
 1207              	.LVL68:
 106:Core/Src/main.c ****  	  //MX_I2C1_Init();
 1208              		.loc 1 106 5 view .LVU383
 1209 0012 FFF7FEFF 		bl	MX_TIM16_Init
 1210              	.LVL69:
 108:Core/Src/main.c ****   	MX_TIM14_Init();
 1211              		.loc 1 108 5 view .LVU384
 1212 0016 FFF7FEFF 		bl	MX_TIM1_Init
 1213              	.LVL70:
 109:Core/Src/main.c ****     MX_TIM3_Init();
 1214              		.loc 1 109 4 view .LVU385
 1215 001a FFF7FEFF 		bl	MX_TIM14_Init
 1216              	.LVL71:
 110:Core/Src/main.c ****     MX_USART1_UART_Init();
 1217              		.loc 1 110 5 view .LVU386
 1218 001e FFF7FEFF 		bl	MX_TIM3_Init
 1219              	.LVL72:
 111:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 1220              		.loc 1 111 5 view .LVU387
 1221 0022 FFF7FEFF 		bl	MX_USART1_UART_Init
 1222              	.LVL73:
 113:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim3);
 1223              		.loc 1 113 5 view .LVU388
 1224 0026 114C     		ldr	r4, .L71
 1225 0028 2000     		movs	r0, r4
 1226 002a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1227              	.LVL74:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 41


 114:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim14);
 1228              		.loc 1 114 5 view .LVU389
 1229 002e 104D     		ldr	r5, .L71+4
 1230 0030 2800     		movs	r0, r5
 1231 0032 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1232              	.LVL75:
 115:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim16);
 1233              		.loc 1 115 5 view .LVU390
 1234 0036 0F48     		ldr	r0, .L71+8
 1235 0038 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1236              	.LVL76:
 116:Core/Src/main.c **** 	  Os_Init_Task();
 1237              		.loc 1 116 5 view .LVU391
 1238 003c 0E48     		ldr	r0, .L71+12
 1239 003e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1240              	.LVL77:
 117:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_1);
 1241              		.loc 1 117 4 view .LVU392
 1242 0042 FFF7FEFF 		bl	Os_Init_Task
 1243              	.LVL78:
 118:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_2);
 1244              		.loc 1 118 5 view .LVU393
 1245 0046 0021     		movs	r1, #0
 1246 0048 2800     		movs	r0, r5
 1247 004a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1248              	.LVL79:
 119:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_1);
 1249              		.loc 1 119 5 view .LVU394
 1250 004e 0421     		movs	r1, #4
 1251 0050 2800     		movs	r0, r5
 1252 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1253              	.LVL80:
 120:Core/Src/main.c ****     HAL_TIMEx_PWMN_Start(&htim1,TIM_CHANNEL_3);
 1254              		.loc 1 120 5 view .LVU395
 1255 0056 0021     		movs	r1, #0
 1256 0058 2000     		movs	r0, r4
 1257 005a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1258              	.LVL81:
 121:Core/Src/main.c ****     /* USER CODE END 2 */
 1259              		.loc 1 121 5 view .LVU396
 1260 005e 0821     		movs	r1, #8
 1261 0060 2000     		movs	r0, r4
 1262 0062 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 1263              	.LVL82:
 1264              	.L70:
 126:Core/Src/main.c ****     {
 1265              		.loc 1 126 5 discriminator 1 view .LVU397
 128:Core/Src/main.c ****     }
 1266              		.loc 1 128 9 discriminator 1 view .LVU398
 1267 0066 FFF7FEFF 		bl	Os_Handler
 1268              	.LVL83:
 126:Core/Src/main.c ****     {
 1269              		.loc 1 126 11 discriminator 1 view .LVU399
 1270 006a FCE7     		b	.L70
 1271              	.L72:
 1272              		.align	2
 1273              	.L71:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 42


 1274 006c 00000000 		.word	htim1
 1275 0070 00000000 		.word	htim3
 1276 0074 00000000 		.word	htim14
 1277 0078 00000000 		.word	htim16
 1278              		.cfi_endproc
 1279              	.LFE40:
 1281              		.global	huart1
 1282              		.global	htim16
 1283              		.global	htim14
 1284              		.global	htim3
 1285              		.global	htim1
 1286              		.global	hi2c1
 1287              		.global	hadc
 1288              		.section	.bss.hadc,"aw",%nobits
 1289              		.align	2
 1290              		.set	.LANCHOR0,. + 0
 1293              	hadc:
 1294 0000 00000000 		.space	64
 1294      00000000 
 1294      00000000 
 1294      00000000 
 1294      00000000 
 1295              		.section	.bss.hi2c1,"aw",%nobits
 1296              		.align	2
 1299              	hi2c1:
 1300 0000 00000000 		.space	76
 1300      00000000 
 1300      00000000 
 1300      00000000 
 1300      00000000 
 1301              		.section	.bss.htim1,"aw",%nobits
 1302              		.align	2
 1305              	htim1:
 1306 0000 00000000 		.space	180
 1306      00000000 
 1306      00000000 
 1306      00000000 
 1306      00000000 
 1307              		.section	.bss.htim14,"aw",%nobits
 1308              		.align	2
 1311              	htim14:
 1312 0000 00000000 		.space	180
 1312      00000000 
 1312      00000000 
 1312      00000000 
 1312      00000000 
 1313              		.section	.bss.htim16,"aw",%nobits
 1314              		.align	2
 1317              	htim16:
 1318 0000 00000000 		.space	180
 1318      00000000 
 1318      00000000 
 1318      00000000 
 1318      00000000 
 1319              		.section	.bss.htim3,"aw",%nobits
 1320              		.align	2
 1323              	htim3:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 43


 1324 0000 00000000 		.space	180
 1324      00000000 
 1324      00000000 
 1324      00000000 
 1324      00000000 
 1325              		.section	.bss.huart1,"aw",%nobits
 1326              		.align	2
 1329              	huart1:
 1330 0000 00000000 		.space	132
 1330      00000000 
 1330      00000000 
 1330      00000000 
 1330      00000000 
 1331              		.text
 1332              	.Letext0:
 1333              		.file 3 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1334              		.file 4 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1335              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 1336              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 1337              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1338              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1339              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 1340              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1341              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 1342              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 1343              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c.h"
 1344              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 1345              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 1346              		.file 16 "Core/Inc/main.h"
 1347              		.file 17 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 1348              		.file 18 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1349              		.file 19 "Core/Inc/os.h"
 1350              		.file 20 "<built-in>"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 44


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:214    .text.MX_GPIO_Init:000000d0 $d
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:223    .text.Error_Handler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:229    .text.Error_Handler:00000000 Error_Handler
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:261    .text.MX_ADC_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:266    .text.MX_ADC_Init:00000000 MX_ADC_Init
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:399    .text.MX_ADC_Init:00000080 $d
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:405    .text.MX_TIM16_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:410    .text.MX_TIM16_Init:00000000 MX_TIM16_Init
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:464    .text.MX_TIM16_Init:00000028 $d
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1317   .bss.htim16:00000000 htim16
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:470    .text.MX_TIM1_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:475    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:704    .text.MX_TIM1_Init:000000f4 $d
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1305   .bss.htim1:00000000 htim1
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:711    .text.MX_TIM14_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:716    .text.MX_TIM14_Init:00000000 MX_TIM14_Init
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:770    .text.MX_TIM14_Init:0000002c $d
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1311   .bss.htim14:00000000 htim14
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:776    .text.MX_TIM3_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:781    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:954    .text.MX_TIM3_Init:000000bc $d
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1323   .bss.htim3:00000000 htim3
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:960    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:965    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1029   .text.MX_USART1_UART_Init:00000030 $d
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1329   .bss.huart1:00000000 huart1
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1035   .text.SystemClock_Config:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1041   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1176   .text.main:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1182   .text.main:00000000 main
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1274   .text.main:0000006c $d
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1299   .bss.hi2c1:00000000 hi2c1
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1293   .bss.hadc:00000000 hadc
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1289   .bss.hadc:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1296   .bss.hi2c1:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1302   .bss.htim1:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1308   .bss.htim14:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1314   .bss.htim16:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1320   .bss.htim3:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s:1326   .bss.huart1:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccvvUltf.s 			page 45


HAL_TIM_MspPostInit
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_TIM_Base_Start_IT
Os_Init_Task
HAL_TIM_PWM_Start
HAL_TIMEx_PWMN_Start
Os_Handler
