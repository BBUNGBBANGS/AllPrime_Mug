ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB49:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "os.h"
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** ADC_HandleTypeDef hadc;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  48:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  49:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  50:Core/Src/main.c **** TIM_HandleTypeDef htim16;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** UART_HandleTypeDef huart1;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/main.c **** void SystemClock_Config(void);
  60:Core/Src/main.c **** static void MX_GPIO_Init(void);
  61:Core/Src/main.c **** static void MX_ADC_Init(void);
  62:Core/Src/main.c **** static void MX_TIM16_Init(void);
  63:Core/Src/main.c **** static void MX_I2C1_Init(void);
  64:Core/Src/main.c **** static void MX_TIM1_Init(void);
  65:Core/Src/main.c **** static void MX_TIM14_Init(void);
  66:Core/Src/main.c **** static void MX_TIM3_Init(void);
  67:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  68:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  73:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /**
  78:Core/Src/main.c ****   * @brief  The application entry point.
  79:Core/Src/main.c ****   * @retval int
  80:Core/Src/main.c ****   */
  81:Core/Src/main.c **** int main(void)
  82:Core/Src/main.c **** {
  83:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****     /* USER CODE END 1 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  90:Core/Src/main.c ****     HAL_Init();
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****     /* USER CODE BEGIN Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****     /* USER CODE END Init */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****     /* Configure the system clock */
  97:Core/Src/main.c ****     SystemClock_Config();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****     /* USER CODE END SysInit */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****     /* Initialize all configured peripherals */
 104:Core/Src/main.c ****     MX_GPIO_Init();
 105:Core/Src/main.c ****     MX_ADC_Init();
 106:Core/Src/main.c ****     MX_TIM16_Init();
 107:Core/Src/main.c ****  	  MX_I2C1_Init();
 108:Core/Src/main.c ****  	  MX_TIM1_Init();
 109:Core/Src/main.c ****   	MX_TIM14_Init();
 110:Core/Src/main.c ****     MX_TIM3_Init();
 111:Core/Src/main.c ****     MX_USART1_UART_Init();
 112:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 113:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim1);
 114:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim3);
 115:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim14);
 116:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim16);
 117:Core/Src/main.c ****     HAL_Delay(1000);
 118:Core/Src/main.c **** 	  Os_Init_Task();
 119:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_1);
 120:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_2);
 121:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_1);
 122:Core/Src/main.c ****     HAL_TIMEx_PWMN_Start(&htim1,TIM_CHANNEL_3);
 123:Core/Src/main.c ****     /* USER CODE END 2 */
 124:Core/Src/main.c ****     /* Infinite loop */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 127:Core/Src/main.c ****     while (1)
 128:Core/Src/main.c ****     {
 129:Core/Src/main.c ****         Os_Handler();
 130:Core/Src/main.c ****     }
 131:Core/Src/main.c ****     /* USER CODE END 3 */
 132:Core/Src/main.c **** }
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** /**
 135:Core/Src/main.c ****   * @brief System Clock Configuration
 136:Core/Src/main.c ****   * @retval None
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c **** void SystemClock_Config(void)
 139:Core/Src/main.c **** {
 140:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 142:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 145:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 146:Core/Src/main.c ****   */
 147:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI14;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 4


 148:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 156:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 157:Core/Src/main.c ****   {
 158:Core/Src/main.c ****     Error_Handler();
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 164:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 170:Core/Src/main.c ****   {
 171:Core/Src/main.c ****     Error_Handler();
 172:Core/Src/main.c ****   }
 173:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1;
 174:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 175:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 176:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 177:Core/Src/main.c ****   {
 178:Core/Src/main.c ****     Error_Handler();
 179:Core/Src/main.c ****   }
 180:Core/Src/main.c **** }
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /**
 183:Core/Src/main.c ****   * @brief ADC Initialization Function
 184:Core/Src/main.c ****   * @param None
 185:Core/Src/main.c ****   * @retval None
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c **** static void MX_ADC_Init(void)
 188:Core/Src/main.c **** {
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 0 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE END ADC_Init 0 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 1 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE END ADC_Init 1 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c ****   hadc.Instance = ADC1;
 203:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 204:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 5


 205:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 206:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 207:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 208:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 209:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 210:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 211:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 212:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 213:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 214:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 215:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 216:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 217:Core/Src/main.c ****   {
 218:Core/Src/main.c ****     Error_Handler();
 219:Core/Src/main.c ****   }
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 222:Core/Src/main.c ****   */
 223:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 224:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 225:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 226:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 227:Core/Src/main.c ****   {
 228:Core/Src/main.c ****     Error_Handler();
 229:Core/Src/main.c ****   }
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 232:Core/Src/main.c ****   */
 233:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 234:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 235:Core/Src/main.c ****   {
 236:Core/Src/main.c ****     Error_Handler();
 237:Core/Src/main.c ****   }
 238:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 2 */
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /* USER CODE END ADC_Init 2 */
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** }
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** /**
 245:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 246:Core/Src/main.c ****   * @param None
 247:Core/Src/main.c ****   * @retval None
 248:Core/Src/main.c ****   */
 249:Core/Src/main.c **** static void MX_I2C1_Init(void)
 250:Core/Src/main.c **** {
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 259:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 260:Core/Src/main.c ****   hi2c1.Init.Timing = 0x2000090E;
 261:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 6


 262:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 263:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 264:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 265:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 266:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 267:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 268:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 269:Core/Src/main.c ****   {
 270:Core/Src/main.c ****     Error_Handler();
 271:Core/Src/main.c ****   }
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /** Configure Analogue filter
 274:Core/Src/main.c ****   */
 275:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 276:Core/Src/main.c ****   {
 277:Core/Src/main.c ****     Error_Handler();
 278:Core/Src/main.c ****   }
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /** Configure Digital filter
 281:Core/Src/main.c ****   */
 282:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 283:Core/Src/main.c ****   {
 284:Core/Src/main.c ****     Error_Handler();
 285:Core/Src/main.c ****   }
 286:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** }
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** /**
 293:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 294:Core/Src/main.c ****   * @param None
 295:Core/Src/main.c ****   * @retval None
 296:Core/Src/main.c ****   */
 297:Core/Src/main.c **** static void MX_TIM1_Init(void)
 298:Core/Src/main.c **** {
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 305:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 306:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 307:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 312:Core/Src/main.c ****   htim1.Instance = TIM1;
 313:Core/Src/main.c ****   htim1.Init.Prescaler = 959;
 314:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 315:Core/Src/main.c ****   htim1.Init.Period = 1000;
 316:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 317:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 318:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 7


 319:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 320:Core/Src/main.c ****   {
 321:Core/Src/main.c ****     Error_Handler();
 322:Core/Src/main.c ****   }
 323:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 324:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 325:Core/Src/main.c ****   {
 326:Core/Src/main.c ****     Error_Handler();
 327:Core/Src/main.c ****   }
 328:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 329:Core/Src/main.c ****   {
 330:Core/Src/main.c ****     Error_Handler();
 331:Core/Src/main.c ****   }
 332:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 333:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 334:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 335:Core/Src/main.c ****   {
 336:Core/Src/main.c ****     Error_Handler();
 337:Core/Src/main.c ****   }
 338:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 339:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 340:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 341:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 342:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 343:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 344:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 345:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 346:Core/Src/main.c ****   {
 347:Core/Src/main.c ****     Error_Handler();
 348:Core/Src/main.c ****   }
 349:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 350:Core/Src/main.c ****   {
 351:Core/Src/main.c ****     Error_Handler();
 352:Core/Src/main.c ****   }
 353:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 354:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 355:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 356:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 357:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 358:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 359:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 360:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 361:Core/Src/main.c ****   {
 362:Core/Src/main.c ****     Error_Handler();
 363:Core/Src/main.c ****   }
 364:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 367:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** }
 370:Core/Src/main.c **** 
 371:Core/Src/main.c **** /**
 372:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 373:Core/Src/main.c ****   * @param None
 374:Core/Src/main.c ****   * @retval None
 375:Core/Src/main.c ****   */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 8


 376:Core/Src/main.c **** static void MX_TIM3_Init(void)
 377:Core/Src/main.c **** {
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 384:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 385:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 390:Core/Src/main.c ****   htim3.Instance = TIM3;
 391:Core/Src/main.c ****   htim3.Init.Prescaler = 479;
 392:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 393:Core/Src/main.c ****   htim3.Init.Period = 1000;
 394:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 395:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 396:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 397:Core/Src/main.c ****   {
 398:Core/Src/main.c ****     Error_Handler();
 399:Core/Src/main.c ****   }
 400:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 401:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 402:Core/Src/main.c ****   {
 403:Core/Src/main.c ****     Error_Handler();
 404:Core/Src/main.c ****   }
 405:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 406:Core/Src/main.c ****   {
 407:Core/Src/main.c ****     Error_Handler();
 408:Core/Src/main.c ****   }
 409:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 410:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 411:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 412:Core/Src/main.c ****   {
 413:Core/Src/main.c ****     Error_Handler();
 414:Core/Src/main.c ****   }
 415:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 416:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 417:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 418:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 419:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 420:Core/Src/main.c ****   {
 421:Core/Src/main.c ****     Error_Handler();
 422:Core/Src/main.c ****   }
 423:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 424:Core/Src/main.c ****   {
 425:Core/Src/main.c ****     Error_Handler();
 426:Core/Src/main.c ****   }
 427:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 430:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 431:Core/Src/main.c **** 
 432:Core/Src/main.c **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 9


 433:Core/Src/main.c **** 
 434:Core/Src/main.c **** /**
 435:Core/Src/main.c ****   * @brief TIM14 Initialization Function
 436:Core/Src/main.c ****   * @param None
 437:Core/Src/main.c ****   * @retval None
 438:Core/Src/main.c ****   */
 439:Core/Src/main.c **** static void MX_TIM14_Init(void)
 440:Core/Src/main.c **** {
 441:Core/Src/main.c **** 
 442:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
 443:Core/Src/main.c **** 
 444:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
 449:Core/Src/main.c ****   htim14.Instance = TIM14;
 450:Core/Src/main.c ****   htim14.Init.Prescaler = 479;
 451:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 452:Core/Src/main.c ****   htim14.Init.Period = 1000;
 453:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 454:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 455:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 456:Core/Src/main.c ****   {
 457:Core/Src/main.c ****     Error_Handler();
 458:Core/Src/main.c ****   }
 459:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
 462:Core/Src/main.c **** 
 463:Core/Src/main.c **** }
 464:Core/Src/main.c **** 
 465:Core/Src/main.c **** /**
 466:Core/Src/main.c ****   * @brief TIM16 Initialization Function
 467:Core/Src/main.c ****   * @param None
 468:Core/Src/main.c ****   * @retval None
 469:Core/Src/main.c ****   */
 470:Core/Src/main.c **** static void MX_TIM16_Init(void)
 471:Core/Src/main.c **** {
 472:Core/Src/main.c **** 
 473:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 0 */
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****   /* USER CODE END TIM16_Init 0 */
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 1 */
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /* USER CODE END TIM16_Init 1 */
 480:Core/Src/main.c ****   htim16.Instance = TIM16;
 481:Core/Src/main.c ****   htim16.Init.Prescaler = 47;
 482:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 483:Core/Src/main.c ****   htim16.Init.Period = 100;
 484:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 485:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 486:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 487:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 488:Core/Src/main.c ****   {
 489:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 10


 490:Core/Src/main.c ****   }
 491:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 2 */
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   /* USER CODE END TIM16_Init 2 */
 494:Core/Src/main.c **** 
 495:Core/Src/main.c **** }
 496:Core/Src/main.c **** 
 497:Core/Src/main.c **** /**
 498:Core/Src/main.c ****   * @brief USART1 Initialization Function
 499:Core/Src/main.c ****   * @param None
 500:Core/Src/main.c ****   * @retval None
 501:Core/Src/main.c ****   */
 502:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 503:Core/Src/main.c **** {
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 508:Core/Src/main.c **** 
 509:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 510:Core/Src/main.c **** 
 511:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 512:Core/Src/main.c ****   huart1.Instance = USART1;
 513:Core/Src/main.c ****   huart1.Init.BaudRate = 38400;
 514:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 515:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 516:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 517:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 518:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 519:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 520:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 521:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 522:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 523:Core/Src/main.c ****   {
 524:Core/Src/main.c ****     Error_Handler();
 525:Core/Src/main.c ****   }
 526:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 527:Core/Src/main.c **** 
 528:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 529:Core/Src/main.c **** 
 530:Core/Src/main.c **** }
 531:Core/Src/main.c **** 
 532:Core/Src/main.c **** /**
 533:Core/Src/main.c ****   * @brief GPIO Initialization Function
 534:Core/Src/main.c ****   * @param None
 535:Core/Src/main.c ****   * @retval None
 536:Core/Src/main.c ****   */
 537:Core/Src/main.c **** static void MX_GPIO_Init(void)
 538:Core/Src/main.c **** {
  26              		.loc 1 538 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 40
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 11


  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 CE46     		mov	lr, r9
  39 0004 4746     		mov	r7, r8
  40 0006 80B5     		push	{r7, lr}
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 28
  43              		.cfi_offset 8, -28
  44              		.cfi_offset 9, -24
  45 0008 8BB0     		sub	sp, sp, #44
  46              	.LCFI2:
  47              		.cfi_def_cfa_offset 72
 539:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  48              		.loc 1 539 3 view .LVU1
  49              		.loc 1 539 20 is_stmt 0 view .LVU2
  50 000a 1422     		movs	r2, #20
  51 000c 0021     		movs	r1, #0
  52 000e 05A8     		add	r0, sp, #20
  53 0010 FFF7FEFF 		bl	memset
  54              	.LVL0:
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 542:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  55              		.loc 1 542 3 is_stmt 1 view .LVU3
  56              	.LBB4:
  57              		.loc 1 542 3 view .LVU4
  58              		.loc 1 542 3 view .LVU5
  59 0014 324B     		ldr	r3, .L2
  60 0016 5969     		ldr	r1, [r3, #20]
  61 0018 8020     		movs	r0, #128
  62 001a 0003     		lsls	r0, r0, #12
  63 001c 0143     		orrs	r1, r0
  64 001e 5961     		str	r1, [r3, #20]
  65              		.loc 1 542 3 view .LVU6
  66 0020 5A69     		ldr	r2, [r3, #20]
  67 0022 0240     		ands	r2, r0
  68 0024 0192     		str	r2, [sp, #4]
  69              		.loc 1 542 3 view .LVU7
  70 0026 019A     		ldr	r2, [sp, #4]
  71              	.LBE4:
  72              		.loc 1 542 3 view .LVU8
 543:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  73              		.loc 1 543 3 view .LVU9
  74              	.LBB5:
  75              		.loc 1 543 3 view .LVU10
  76              		.loc 1 543 3 view .LVU11
  77 0028 5969     		ldr	r1, [r3, #20]
  78 002a 8020     		movs	r0, #128
  79 002c C003     		lsls	r0, r0, #15
  80 002e 0143     		orrs	r1, r0
  81 0030 5961     		str	r1, [r3, #20]
  82              		.loc 1 543 3 view .LVU12
  83 0032 5A69     		ldr	r2, [r3, #20]
  84 0034 0240     		ands	r2, r0
  85 0036 0292     		str	r2, [sp, #8]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 12


  86              		.loc 1 543 3 view .LVU13
  87 0038 029A     		ldr	r2, [sp, #8]
  88              	.LBE5:
  89              		.loc 1 543 3 view .LVU14
 544:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  90              		.loc 1 544 3 view .LVU15
  91              	.LBB6:
  92              		.loc 1 544 3 view .LVU16
  93              		.loc 1 544 3 view .LVU17
  94 003a 5969     		ldr	r1, [r3, #20]
  95 003c 8020     		movs	r0, #128
  96 003e 8002     		lsls	r0, r0, #10
  97 0040 0143     		orrs	r1, r0
  98 0042 5961     		str	r1, [r3, #20]
  99              		.loc 1 544 3 view .LVU18
 100 0044 5A69     		ldr	r2, [r3, #20]
 101 0046 0240     		ands	r2, r0
 102 0048 0392     		str	r2, [sp, #12]
 103              		.loc 1 544 3 view .LVU19
 104 004a 039A     		ldr	r2, [sp, #12]
 105              	.LBE6:
 106              		.loc 1 544 3 view .LVU20
 545:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 107              		.loc 1 545 3 view .LVU21
 108              	.LBB7:
 109              		.loc 1 545 3 view .LVU22
 110              		.loc 1 545 3 view .LVU23
 111 004c 5A69     		ldr	r2, [r3, #20]
 112 004e 8021     		movs	r1, #128
 113 0050 C902     		lsls	r1, r1, #11
 114 0052 0A43     		orrs	r2, r1
 115 0054 5A61     		str	r2, [r3, #20]
 116              		.loc 1 545 3 view .LVU24
 117 0056 5B69     		ldr	r3, [r3, #20]
 118 0058 0B40     		ands	r3, r1
 119 005a 0493     		str	r3, [sp, #16]
 120              		.loc 1 545 3 view .LVU25
 121 005c 049B     		ldr	r3, [sp, #16]
 122              	.LBE7:
 123              		.loc 1 545 3 view .LVU26
 546:Core/Src/main.c **** 
 547:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 548:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 124              		.loc 1 548 3 view .LVU27
 125 005e 8024     		movs	r4, #128
 126 0060 A401     		lsls	r4, r4, #6
 127 0062 204B     		ldr	r3, .L2+4
 128 0064 9946     		mov	r9, r3
 129 0066 0022     		movs	r2, #0
 130 0068 2100     		movs	r1, r4
 131 006a 1800     		movs	r0, r3
 132 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 133              	.LVL1:
 549:Core/Src/main.c **** 
 550:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 551:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 134              		.loc 1 551 3 view .LVU28
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 13


 135 0070 9026     		movs	r6, #144
 136 0072 F605     		lsls	r6, r6, #23
 137 0074 0022     		movs	r2, #0
 138 0076 0221     		movs	r1, #2
 139 0078 3000     		movs	r0, r6
 140 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 141              	.LVL2:
 552:Core/Src/main.c **** 
 553:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 554:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_10|GPIO_PIN_11
 142              		.loc 1 554 3 view .LVU29
 143 007e 1A4B     		ldr	r3, .L2+8
 144 0080 9846     		mov	r8, r3
 145 0082 1A4F     		ldr	r7, .L2+12
 146 0084 0022     		movs	r2, #0
 147 0086 1900     		movs	r1, r3
 148 0088 3800     		movs	r0, r7
 149 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 150              	.LVL3:
 555:Core/Src/main.c ****                           |GPIO_PIN_12|GPIO_PIN_14|GPIO_PIN_3|GPIO_PIN_4
 556:Core/Src/main.c ****                           |GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 559:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 151              		.loc 1 559 3 view .LVU30
 152              		.loc 1 559 23 is_stmt 0 view .LVU31
 153 008e 0594     		str	r4, [sp, #20]
 560:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 154              		.loc 1 560 3 is_stmt 1 view .LVU32
 155              		.loc 1 560 24 is_stmt 0 view .LVU33
 156 0090 0125     		movs	r5, #1
 157 0092 0695     		str	r5, [sp, #24]
 561:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 158              		.loc 1 561 3 is_stmt 1 view .LVU34
 159              		.loc 1 561 24 is_stmt 0 view .LVU35
 160 0094 0024     		movs	r4, #0
 161 0096 0794     		str	r4, [sp, #28]
 562:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 162              		.loc 1 562 3 is_stmt 1 view .LVU36
 163              		.loc 1 562 25 is_stmt 0 view .LVU37
 164 0098 0894     		str	r4, [sp, #32]
 563:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 165              		.loc 1 563 3 is_stmt 1 view .LVU38
 166 009a 05A9     		add	r1, sp, #20
 167 009c 4846     		mov	r0, r9
 168 009e FFF7FEFF 		bl	HAL_GPIO_Init
 169              	.LVL4:
 564:Core/Src/main.c **** 
 565:Core/Src/main.c ****   /*Configure GPIO pin : PA1 */
 566:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1;
 170              		.loc 1 566 3 view .LVU39
 171              		.loc 1 566 23 is_stmt 0 view .LVU40
 172 00a2 0223     		movs	r3, #2
 173 00a4 0593     		str	r3, [sp, #20]
 567:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 174              		.loc 1 567 3 is_stmt 1 view .LVU41
 175              		.loc 1 567 24 is_stmt 0 view .LVU42
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 14


 176 00a6 0695     		str	r5, [sp, #24]
 568:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 177              		.loc 1 568 3 is_stmt 1 view .LVU43
 178              		.loc 1 568 24 is_stmt 0 view .LVU44
 179 00a8 0794     		str	r4, [sp, #28]
 569:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 180              		.loc 1 569 3 is_stmt 1 view .LVU45
 181              		.loc 1 569 25 is_stmt 0 view .LVU46
 182 00aa 0894     		str	r4, [sp, #32]
 570:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 183              		.loc 1 570 3 is_stmt 1 view .LVU47
 184 00ac 05A9     		add	r1, sp, #20
 185 00ae 3000     		movs	r0, r6
 186 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 187              	.LVL5:
 571:Core/Src/main.c **** 
 572:Core/Src/main.c ****   /*Configure GPIO pins : PA4 PA9 PA10 PA11
 573:Core/Src/main.c ****                            PA12 PA15 */
 574:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 188              		.loc 1 574 3 view .LVU48
 189              		.loc 1 574 23 is_stmt 0 view .LVU49
 190 00b4 0E4B     		ldr	r3, .L2+16
 191 00b6 0593     		str	r3, [sp, #20]
 575:Core/Src/main.c ****                           |GPIO_PIN_12|GPIO_PIN_15;
 576:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 192              		.loc 1 576 3 is_stmt 1 view .LVU50
 193              		.loc 1 576 24 is_stmt 0 view .LVU51
 194 00b8 0694     		str	r4, [sp, #24]
 577:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 195              		.loc 1 577 3 is_stmt 1 view .LVU52
 196              		.loc 1 577 24 is_stmt 0 view .LVU53
 197 00ba 0794     		str	r4, [sp, #28]
 578:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 198              		.loc 1 578 3 is_stmt 1 view .LVU54
 199 00bc 05A9     		add	r1, sp, #20
 200 00be 3000     		movs	r0, r6
 201 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 202              	.LVL6:
 579:Core/Src/main.c **** 
 580:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB10 PB11
 581:Core/Src/main.c ****                            PB12 PB14 PB3 PB4
 582:Core/Src/main.c ****                            PB5 PB8 PB9 */
 583:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_10|GPIO_PIN_11
 203              		.loc 1 583 3 view .LVU55
 204              		.loc 1 583 23 is_stmt 0 view .LVU56
 205 00c4 4346     		mov	r3, r8
 206 00c6 0593     		str	r3, [sp, #20]
 584:Core/Src/main.c ****                           |GPIO_PIN_12|GPIO_PIN_14|GPIO_PIN_3|GPIO_PIN_4
 585:Core/Src/main.c ****                           |GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_9;
 586:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 207              		.loc 1 586 3 is_stmt 1 view .LVU57
 208              		.loc 1 586 24 is_stmt 0 view .LVU58
 209 00c8 0695     		str	r5, [sp, #24]
 587:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 210              		.loc 1 587 3 is_stmt 1 view .LVU59
 211              		.loc 1 587 24 is_stmt 0 view .LVU60
 212 00ca 0794     		str	r4, [sp, #28]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 15


 588:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 213              		.loc 1 588 3 is_stmt 1 view .LVU61
 214              		.loc 1 588 25 is_stmt 0 view .LVU62
 215 00cc 0894     		str	r4, [sp, #32]
 589:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 216              		.loc 1 589 3 is_stmt 1 view .LVU63
 217 00ce 05A9     		add	r1, sp, #20
 218 00d0 3800     		movs	r0, r7
 219 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 220              	.LVL7:
 590:Core/Src/main.c **** 
 591:Core/Src/main.c **** }
 221              		.loc 1 591 1 is_stmt 0 view .LVU64
 222 00d6 0BB0     		add	sp, sp, #44
 223              		@ sp needed
 224 00d8 C0BC     		pop	{r6, r7}
 225 00da B946     		mov	r9, r7
 226 00dc B046     		mov	r8, r6
 227 00de F0BD     		pop	{r4, r5, r6, r7, pc}
 228              	.L3:
 229              		.align	2
 230              	.L2:
 231 00e0 00100240 		.word	1073876992
 232 00e4 00080048 		.word	1207961600
 233 00e8 3B5F0000 		.word	24379
 234 00ec 00040048 		.word	1207960576
 235 00f0 109E0000 		.word	40464
 236              		.cfi_endproc
 237              	.LFE49:
 239              		.section	.text.Error_Handler,"ax",%progbits
 240              		.align	1
 241              		.global	Error_Handler
 242              		.syntax unified
 243              		.code	16
 244              		.thumb_func
 246              	Error_Handler:
 247              	.LFB50:
 592:Core/Src/main.c **** 
 593:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 594:Core/Src/main.c **** 
 595:Core/Src/main.c **** /* USER CODE END 4 */
 596:Core/Src/main.c **** 
 597:Core/Src/main.c **** /**
 598:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 599:Core/Src/main.c ****   * @retval None
 600:Core/Src/main.c ****   */
 601:Core/Src/main.c **** void Error_Handler(void)
 602:Core/Src/main.c **** {
 248              		.loc 1 602 1 is_stmt 1 view -0
 249              		.cfi_startproc
 250              		@ Volatile: function does not return.
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 603:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 604:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 605:Core/Src/main.c ****   __disable_irq();
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 16


 254              		.loc 1 605 3 view .LVU66
 255              	.LBB8:
 256              	.LBI8:
 257              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 17


  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 18


 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 258              		.loc 2 140 27 view .LVU67
 259              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 260              		.loc 2 142 3 view .LVU68
 261              		.syntax divided
 262              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 263 0000 72B6     		cpsid i
 264              	@ 0 "" 2
 265              		.thumb
 266              		.syntax unified
 267              	.L5:
 268              	.LBE9:
 269              	.LBE8:
 606:Core/Src/main.c ****   while (1)
 270              		.loc 1 606 3 discriminator 1 view .LVU69
 607:Core/Src/main.c ****   {
 608:Core/Src/main.c ****   }
 271              		.loc 1 608 3 discriminator 1 view .LVU70
 606:Core/Src/main.c ****   while (1)
 272              		.loc 1 606 9 discriminator 1 view .LVU71
 273 0002 FEE7     		b	.L5
 274              		.cfi_endproc
 275              	.LFE50:
 277              		.section	.text.MX_ADC_Init,"ax",%progbits
 278              		.align	1
 279              		.syntax unified
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 19


 280              		.code	16
 281              		.thumb_func
 283              	MX_ADC_Init:
 284              	.LFB42:
 188:Core/Src/main.c **** 
 285              		.loc 1 188 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 16
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289 0000 00B5     		push	{lr}
 290              	.LCFI3:
 291              		.cfi_def_cfa_offset 4
 292              		.cfi_offset 14, -4
 293 0002 85B0     		sub	sp, sp, #20
 294              	.LCFI4:
 295              		.cfi_def_cfa_offset 24
 194:Core/Src/main.c **** 
 296              		.loc 1 194 3 view .LVU73
 194:Core/Src/main.c **** 
 297              		.loc 1 194 26 is_stmt 0 view .LVU74
 298 0004 0C22     		movs	r2, #12
 299 0006 0021     		movs	r1, #0
 300 0008 01A8     		add	r0, sp, #4
 301 000a FFF7FEFF 		bl	memset
 302              	.LVL8:
 202:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 303              		.loc 1 202 3 is_stmt 1 view .LVU75
 202:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 304              		.loc 1 202 17 is_stmt 0 view .LVU76
 305 000e 1C48     		ldr	r0, .L13
 306 0010 1C4B     		ldr	r3, .L13+4
 307 0012 0360     		str	r3, [r0]
 203:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 308              		.loc 1 203 3 is_stmt 1 view .LVU77
 203:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 309              		.loc 1 203 28 is_stmt 0 view .LVU78
 310 0014 0023     		movs	r3, #0
 311 0016 4360     		str	r3, [r0, #4]
 204:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 312              		.loc 1 204 3 is_stmt 1 view .LVU79
 204:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 313              		.loc 1 204 24 is_stmt 0 view .LVU80
 314 0018 8360     		str	r3, [r0, #8]
 205:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 315              		.loc 1 205 3 is_stmt 1 view .LVU81
 205:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 316              		.loc 1 205 23 is_stmt 0 view .LVU82
 317 001a C360     		str	r3, [r0, #12]
 206:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 318              		.loc 1 206 3 is_stmt 1 view .LVU83
 206:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 319              		.loc 1 206 26 is_stmt 0 view .LVU84
 320 001c 0122     		movs	r2, #1
 321 001e 0261     		str	r2, [r0, #16]
 207:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 322              		.loc 1 207 3 is_stmt 1 view .LVU85
 207:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 20


 323              		.loc 1 207 26 is_stmt 0 view .LVU86
 324 0020 0421     		movs	r1, #4
 325 0022 4161     		str	r1, [r0, #20]
 208:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 326              		.loc 1 208 3 is_stmt 1 view .LVU87
 208:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 327              		.loc 1 208 30 is_stmt 0 view .LVU88
 328 0024 0376     		strb	r3, [r0, #24]
 209:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 329              		.loc 1 209 3 is_stmt 1 view .LVU89
 209:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 330              		.loc 1 209 34 is_stmt 0 view .LVU90
 331 0026 4376     		strb	r3, [r0, #25]
 210:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 332              		.loc 1 210 3 is_stmt 1 view .LVU91
 210:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 333              		.loc 1 210 32 is_stmt 0 view .LVU92
 334 0028 8376     		strb	r3, [r0, #26]
 211:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 335              		.loc 1 211 3 is_stmt 1 view .LVU93
 211:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 336              		.loc 1 211 35 is_stmt 0 view .LVU94
 337 002a C376     		strb	r3, [r0, #27]
 212:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 338              		.loc 1 212 3 is_stmt 1 view .LVU95
 212:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 339              		.loc 1 212 30 is_stmt 0 view .LVU96
 340 002c C221     		movs	r1, #194
 341 002e FF31     		adds	r1, r1, #255
 342 0030 C161     		str	r1, [r0, #28]
 213:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 343              		.loc 1 213 3 is_stmt 1 view .LVU97
 213:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 344              		.loc 1 213 34 is_stmt 0 view .LVU98
 345 0032 0362     		str	r3, [r0, #32]
 214:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 346              		.loc 1 214 3 is_stmt 1 view .LVU99
 214:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 347              		.loc 1 214 35 is_stmt 0 view .LVU100
 348 0034 9E39     		subs	r1, r1, #158
 349 0036 FF39     		subs	r1, r1, #255
 350 0038 4354     		strb	r3, [r0, r1]
 215:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 351              		.loc 1 215 3 is_stmt 1 view .LVU101
 215:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 352              		.loc 1 215 21 is_stmt 0 view .LVU102
 353 003a 8262     		str	r2, [r0, #40]
 216:Core/Src/main.c ****   {
 354              		.loc 1 216 3 is_stmt 1 view .LVU103
 216:Core/Src/main.c ****   {
 355              		.loc 1 216 7 is_stmt 0 view .LVU104
 356 003c FFF7FEFF 		bl	HAL_ADC_Init
 357              	.LVL9:
 216:Core/Src/main.c ****   {
 358              		.loc 1 216 6 view .LVU105
 359 0040 0028     		cmp	r0, #0
 360 0042 17D1     		bne	.L10
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 21


 223:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 361              		.loc 1 223 3 is_stmt 1 view .LVU106
 223:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 362              		.loc 1 223 19 is_stmt 0 view .LVU107
 363 0044 0023     		movs	r3, #0
 364 0046 0193     		str	r3, [sp, #4]
 224:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 365              		.loc 1 224 3 is_stmt 1 view .LVU108
 224:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 366              		.loc 1 224 16 is_stmt 0 view .LVU109
 367 0048 8023     		movs	r3, #128
 368 004a 5B01     		lsls	r3, r3, #5
 369 004c 0293     		str	r3, [sp, #8]
 225:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 370              		.loc 1 225 3 is_stmt 1 view .LVU110
 225:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 371              		.loc 1 225 24 is_stmt 0 view .LVU111
 372 004e 8023     		movs	r3, #128
 373 0050 5B05     		lsls	r3, r3, #21
 374 0052 0393     		str	r3, [sp, #12]
 226:Core/Src/main.c ****   {
 375              		.loc 1 226 3 is_stmt 1 view .LVU112
 226:Core/Src/main.c ****   {
 376              		.loc 1 226 7 is_stmt 0 view .LVU113
 377 0054 01A9     		add	r1, sp, #4
 378 0056 0A48     		ldr	r0, .L13
 379 0058 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 380              	.LVL10:
 226:Core/Src/main.c ****   {
 381              		.loc 1 226 6 view .LVU114
 382 005c 0028     		cmp	r0, #0
 383 005e 0BD1     		bne	.L11
 233:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 384              		.loc 1 233 3 is_stmt 1 view .LVU115
 233:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 385              		.loc 1 233 19 is_stmt 0 view .LVU116
 386 0060 1023     		movs	r3, #16
 387 0062 0193     		str	r3, [sp, #4]
 234:Core/Src/main.c ****   {
 388              		.loc 1 234 3 is_stmt 1 view .LVU117
 234:Core/Src/main.c ****   {
 389              		.loc 1 234 7 is_stmt 0 view .LVU118
 390 0064 01A9     		add	r1, sp, #4
 391 0066 0648     		ldr	r0, .L13
 392 0068 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 393              	.LVL11:
 234:Core/Src/main.c ****   {
 394              		.loc 1 234 6 view .LVU119
 395 006c 0028     		cmp	r0, #0
 396 006e 05D1     		bne	.L12
 242:Core/Src/main.c **** 
 397              		.loc 1 242 1 view .LVU120
 398 0070 05B0     		add	sp, sp, #20
 399              		@ sp needed
 400 0072 00BD     		pop	{pc}
 401              	.L10:
 218:Core/Src/main.c ****   }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 22


 402              		.loc 1 218 5 is_stmt 1 view .LVU121
 403 0074 FFF7FEFF 		bl	Error_Handler
 404              	.LVL12:
 405              	.L11:
 228:Core/Src/main.c ****   }
 406              		.loc 1 228 5 view .LVU122
 407 0078 FFF7FEFF 		bl	Error_Handler
 408              	.LVL13:
 409              	.L12:
 236:Core/Src/main.c ****   }
 410              		.loc 1 236 5 view .LVU123
 411 007c FFF7FEFF 		bl	Error_Handler
 412              	.LVL14:
 413              	.L14:
 414              		.align	2
 415              	.L13:
 416 0080 00000000 		.word	.LANCHOR0
 417 0084 00240140 		.word	1073816576
 418              		.cfi_endproc
 419              	.LFE42:
 421              		.section	.text.MX_TIM16_Init,"ax",%progbits
 422              		.align	1
 423              		.syntax unified
 424              		.code	16
 425              		.thumb_func
 427              	MX_TIM16_Init:
 428              	.LFB47:
 471:Core/Src/main.c **** 
 429              		.loc 1 471 1 view -0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433 0000 10B5     		push	{r4, lr}
 434              	.LCFI5:
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 4, -8
 437              		.cfi_offset 14, -4
 480:Core/Src/main.c ****   htim16.Init.Prescaler = 47;
 438              		.loc 1 480 3 view .LVU125
 480:Core/Src/main.c ****   htim16.Init.Prescaler = 47;
 439              		.loc 1 480 19 is_stmt 0 view .LVU126
 440 0002 0A48     		ldr	r0, .L18
 441 0004 0A4B     		ldr	r3, .L18+4
 442 0006 0360     		str	r3, [r0]
 481:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 443              		.loc 1 481 3 is_stmt 1 view .LVU127
 481:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 444              		.loc 1 481 25 is_stmt 0 view .LVU128
 445 0008 2F23     		movs	r3, #47
 446 000a 4360     		str	r3, [r0, #4]
 482:Core/Src/main.c ****   htim16.Init.Period = 100;
 447              		.loc 1 482 3 is_stmt 1 view .LVU129
 482:Core/Src/main.c ****   htim16.Init.Period = 100;
 448              		.loc 1 482 27 is_stmt 0 view .LVU130
 449 000c 0023     		movs	r3, #0
 450 000e 8360     		str	r3, [r0, #8]
 483:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 23


 451              		.loc 1 483 3 is_stmt 1 view .LVU131
 483:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 452              		.loc 1 483 22 is_stmt 0 view .LVU132
 453 0010 6422     		movs	r2, #100
 454 0012 C260     		str	r2, [r0, #12]
 484:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 455              		.loc 1 484 3 is_stmt 1 view .LVU133
 484:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 456              		.loc 1 484 29 is_stmt 0 view .LVU134
 457 0014 0361     		str	r3, [r0, #16]
 485:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 458              		.loc 1 485 3 is_stmt 1 view .LVU135
 485:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 459              		.loc 1 485 33 is_stmt 0 view .LVU136
 460 0016 4361     		str	r3, [r0, #20]
 486:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 461              		.loc 1 486 3 is_stmt 1 view .LVU137
 486:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 462              		.loc 1 486 33 is_stmt 0 view .LVU138
 463 0018 8033     		adds	r3, r3, #128
 464 001a 8361     		str	r3, [r0, #24]
 487:Core/Src/main.c ****   {
 465              		.loc 1 487 3 is_stmt 1 view .LVU139
 487:Core/Src/main.c ****   {
 466              		.loc 1 487 7 is_stmt 0 view .LVU140
 467 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 468              	.LVL15:
 487:Core/Src/main.c ****   {
 469              		.loc 1 487 6 view .LVU141
 470 0020 0028     		cmp	r0, #0
 471 0022 00D1     		bne	.L17
 495:Core/Src/main.c **** 
 472              		.loc 1 495 1 view .LVU142
 473              		@ sp needed
 474 0024 10BD     		pop	{r4, pc}
 475              	.L17:
 489:Core/Src/main.c ****   }
 476              		.loc 1 489 5 is_stmt 1 view .LVU143
 477 0026 FFF7FEFF 		bl	Error_Handler
 478              	.LVL16:
 479              	.L19:
 480 002a C046     		.align	2
 481              	.L18:
 482 002c 00000000 		.word	htim16
 483 0030 00440140 		.word	1073824768
 484              		.cfi_endproc
 485              	.LFE47:
 487              		.section	.text.MX_I2C1_Init,"ax",%progbits
 488              		.align	1
 489              		.syntax unified
 490              		.code	16
 491              		.thumb_func
 493              	MX_I2C1_Init:
 494              	.LFB43:
 250:Core/Src/main.c **** 
 495              		.loc 1 250 1 view -0
 496              		.cfi_startproc
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 24


 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499 0000 10B5     		push	{r4, lr}
 500              	.LCFI6:
 501              		.cfi_def_cfa_offset 8
 502              		.cfi_offset 4, -8
 503              		.cfi_offset 14, -4
 259:Core/Src/main.c ****   hi2c1.Init.Timing = 0x2000090E;
 504              		.loc 1 259 3 view .LVU145
 259:Core/Src/main.c ****   hi2c1.Init.Timing = 0x2000090E;
 505              		.loc 1 259 18 is_stmt 0 view .LVU146
 506 0002 1248     		ldr	r0, .L27
 507 0004 124B     		ldr	r3, .L27+4
 508 0006 0360     		str	r3, [r0]
 260:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 509              		.loc 1 260 3 is_stmt 1 view .LVU147
 260:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 510              		.loc 1 260 21 is_stmt 0 view .LVU148
 511 0008 124B     		ldr	r3, .L27+8
 512 000a 4360     		str	r3, [r0, #4]
 261:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 513              		.loc 1 261 3 is_stmt 1 view .LVU149
 261:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 514              		.loc 1 261 26 is_stmt 0 view .LVU150
 515 000c 0023     		movs	r3, #0
 516 000e 8360     		str	r3, [r0, #8]
 262:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 517              		.loc 1 262 3 is_stmt 1 view .LVU151
 262:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 518              		.loc 1 262 29 is_stmt 0 view .LVU152
 519 0010 0122     		movs	r2, #1
 520 0012 C260     		str	r2, [r0, #12]
 263:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 521              		.loc 1 263 3 is_stmt 1 view .LVU153
 263:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 522              		.loc 1 263 30 is_stmt 0 view .LVU154
 523 0014 0361     		str	r3, [r0, #16]
 264:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 524              		.loc 1 264 3 is_stmt 1 view .LVU155
 264:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 525              		.loc 1 264 26 is_stmt 0 view .LVU156
 526 0016 4361     		str	r3, [r0, #20]
 265:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 527              		.loc 1 265 3 is_stmt 1 view .LVU157
 265:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 528              		.loc 1 265 31 is_stmt 0 view .LVU158
 529 0018 8361     		str	r3, [r0, #24]
 266:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 530              		.loc 1 266 3 is_stmt 1 view .LVU159
 266:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 531              		.loc 1 266 30 is_stmt 0 view .LVU160
 532 001a C361     		str	r3, [r0, #28]
 267:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 533              		.loc 1 267 3 is_stmt 1 view .LVU161
 267:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 534              		.loc 1 267 28 is_stmt 0 view .LVU162
 535 001c 0362     		str	r3, [r0, #32]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 25


 268:Core/Src/main.c ****   {
 536              		.loc 1 268 3 is_stmt 1 view .LVU163
 268:Core/Src/main.c ****   {
 537              		.loc 1 268 7 is_stmt 0 view .LVU164
 538 001e FFF7FEFF 		bl	HAL_I2C_Init
 539              	.LVL17:
 268:Core/Src/main.c ****   {
 540              		.loc 1 268 6 view .LVU165
 541 0022 0028     		cmp	r0, #0
 542 0024 0CD1     		bne	.L24
 275:Core/Src/main.c ****   {
 543              		.loc 1 275 3 is_stmt 1 view .LVU166
 275:Core/Src/main.c ****   {
 544              		.loc 1 275 7 is_stmt 0 view .LVU167
 545 0026 0021     		movs	r1, #0
 546 0028 0848     		ldr	r0, .L27
 547 002a FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 548              	.LVL18:
 275:Core/Src/main.c ****   {
 549              		.loc 1 275 6 view .LVU168
 550 002e 0028     		cmp	r0, #0
 551 0030 08D1     		bne	.L25
 282:Core/Src/main.c ****   {
 552              		.loc 1 282 3 is_stmt 1 view .LVU169
 282:Core/Src/main.c ****   {
 553              		.loc 1 282 7 is_stmt 0 view .LVU170
 554 0032 0021     		movs	r1, #0
 555 0034 0548     		ldr	r0, .L27
 556 0036 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 557              	.LVL19:
 282:Core/Src/main.c ****   {
 558              		.loc 1 282 6 view .LVU171
 559 003a 0028     		cmp	r0, #0
 560 003c 04D1     		bne	.L26
 290:Core/Src/main.c **** 
 561              		.loc 1 290 1 view .LVU172
 562              		@ sp needed
 563 003e 10BD     		pop	{r4, pc}
 564              	.L24:
 270:Core/Src/main.c ****   }
 565              		.loc 1 270 5 is_stmt 1 view .LVU173
 566 0040 FFF7FEFF 		bl	Error_Handler
 567              	.LVL20:
 568              	.L25:
 277:Core/Src/main.c ****   }
 569              		.loc 1 277 5 view .LVU174
 570 0044 FFF7FEFF 		bl	Error_Handler
 571              	.LVL21:
 572              	.L26:
 284:Core/Src/main.c ****   }
 573              		.loc 1 284 5 view .LVU175
 574 0048 FFF7FEFF 		bl	Error_Handler
 575              	.LVL22:
 576              	.L28:
 577              		.align	2
 578              	.L27:
 579 004c 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 26


 580 0050 00540040 		.word	1073763328
 581 0054 0E090020 		.word	536873230
 582              		.cfi_endproc
 583              	.LFE43:
 585              		.section	.text.MX_TIM1_Init,"ax",%progbits
 586              		.align	1
 587              		.syntax unified
 588              		.code	16
 589              		.thumb_func
 591              	MX_TIM1_Init:
 592              	.LFB44:
 298:Core/Src/main.c **** 
 593              		.loc 1 298 1 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 88
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597 0000 00B5     		push	{lr}
 598              	.LCFI7:
 599              		.cfi_def_cfa_offset 4
 600              		.cfi_offset 14, -4
 601 0002 97B0     		sub	sp, sp, #92
 602              	.LCFI8:
 603              		.cfi_def_cfa_offset 96
 304:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 604              		.loc 1 304 3 view .LVU177
 304:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 605              		.loc 1 304 26 is_stmt 0 view .LVU178
 606 0004 1022     		movs	r2, #16
 607 0006 0021     		movs	r1, #0
 608 0008 12A8     		add	r0, sp, #72
 609 000a FFF7FEFF 		bl	memset
 610              	.LVL23:
 305:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 611              		.loc 1 305 3 is_stmt 1 view .LVU179
 305:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 612              		.loc 1 305 27 is_stmt 0 view .LVU180
 613 000e 0822     		movs	r2, #8
 614 0010 0021     		movs	r1, #0
 615 0012 10A8     		add	r0, sp, #64
 616 0014 FFF7FEFF 		bl	memset
 617              	.LVL24:
 306:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 618              		.loc 1 306 3 is_stmt 1 view .LVU181
 306:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 619              		.loc 1 306 22 is_stmt 0 view .LVU182
 620 0018 1C22     		movs	r2, #28
 621 001a 0021     		movs	r1, #0
 622 001c 09A8     		add	r0, sp, #36
 623 001e FFF7FEFF 		bl	memset
 624              	.LVL25:
 307:Core/Src/main.c **** 
 625              		.loc 1 307 3 is_stmt 1 view .LVU183
 307:Core/Src/main.c **** 
 626              		.loc 1 307 34 is_stmt 0 view .LVU184
 627 0022 2022     		movs	r2, #32
 628 0024 0021     		movs	r1, #0
 629 0026 01A8     		add	r0, sp, #4
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 27


 630 0028 FFF7FEFF 		bl	memset
 631              	.LVL26:
 312:Core/Src/main.c ****   htim1.Init.Prescaler = 959;
 632              		.loc 1 312 3 is_stmt 1 view .LVU185
 312:Core/Src/main.c ****   htim1.Init.Prescaler = 959;
 633              		.loc 1 312 18 is_stmt 0 view .LVU186
 634 002c 3148     		ldr	r0, .L44
 635 002e 324B     		ldr	r3, .L44+4
 636 0030 0360     		str	r3, [r0]
 313:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 637              		.loc 1 313 3 is_stmt 1 view .LVU187
 313:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 638              		.loc 1 313 24 is_stmt 0 view .LVU188
 639 0032 324B     		ldr	r3, .L44+8
 640 0034 4360     		str	r3, [r0, #4]
 314:Core/Src/main.c ****   htim1.Init.Period = 1000;
 641              		.loc 1 314 3 is_stmt 1 view .LVU189
 314:Core/Src/main.c ****   htim1.Init.Period = 1000;
 642              		.loc 1 314 26 is_stmt 0 view .LVU190
 643 0036 0023     		movs	r3, #0
 644 0038 8360     		str	r3, [r0, #8]
 315:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 645              		.loc 1 315 3 is_stmt 1 view .LVU191
 315:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 646              		.loc 1 315 21 is_stmt 0 view .LVU192
 647 003a FA22     		movs	r2, #250
 648 003c 9200     		lsls	r2, r2, #2
 649 003e C260     		str	r2, [r0, #12]
 316:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 650              		.loc 1 316 3 is_stmt 1 view .LVU193
 316:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 651              		.loc 1 316 28 is_stmt 0 view .LVU194
 652 0040 0361     		str	r3, [r0, #16]
 317:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 653              		.loc 1 317 3 is_stmt 1 view .LVU195
 317:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 654              		.loc 1 317 32 is_stmt 0 view .LVU196
 655 0042 4361     		str	r3, [r0, #20]
 318:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 656              		.loc 1 318 3 is_stmt 1 view .LVU197
 318:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 657              		.loc 1 318 32 is_stmt 0 view .LVU198
 658 0044 8033     		adds	r3, r3, #128
 659 0046 8361     		str	r3, [r0, #24]
 319:Core/Src/main.c ****   {
 660              		.loc 1 319 3 is_stmt 1 view .LVU199
 319:Core/Src/main.c ****   {
 661              		.loc 1 319 7 is_stmt 0 view .LVU200
 662 0048 FFF7FEFF 		bl	HAL_TIM_Base_Init
 663              	.LVL27:
 319:Core/Src/main.c ****   {
 664              		.loc 1 319 6 view .LVU201
 665 004c 0028     		cmp	r0, #0
 666 004e 42D1     		bne	.L37
 323:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 667              		.loc 1 323 3 is_stmt 1 view .LVU202
 323:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 28


 668              		.loc 1 323 34 is_stmt 0 view .LVU203
 669 0050 8023     		movs	r3, #128
 670 0052 5B01     		lsls	r3, r3, #5
 671 0054 1293     		str	r3, [sp, #72]
 324:Core/Src/main.c ****   {
 672              		.loc 1 324 3 is_stmt 1 view .LVU204
 324:Core/Src/main.c ****   {
 673              		.loc 1 324 7 is_stmt 0 view .LVU205
 674 0056 12A9     		add	r1, sp, #72
 675 0058 2648     		ldr	r0, .L44
 676 005a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 677              	.LVL28:
 324:Core/Src/main.c ****   {
 678              		.loc 1 324 6 view .LVU206
 679 005e 0028     		cmp	r0, #0
 680 0060 3BD1     		bne	.L38
 328:Core/Src/main.c ****   {
 681              		.loc 1 328 3 is_stmt 1 view .LVU207
 328:Core/Src/main.c ****   {
 682              		.loc 1 328 7 is_stmt 0 view .LVU208
 683 0062 2448     		ldr	r0, .L44
 684 0064 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 685              	.LVL29:
 328:Core/Src/main.c ****   {
 686              		.loc 1 328 6 view .LVU209
 687 0068 0028     		cmp	r0, #0
 688 006a 38D1     		bne	.L39
 332:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 689              		.loc 1 332 3 is_stmt 1 view .LVU210
 332:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 690              		.loc 1 332 37 is_stmt 0 view .LVU211
 691 006c 0023     		movs	r3, #0
 692 006e 1093     		str	r3, [sp, #64]
 333:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 693              		.loc 1 333 3 is_stmt 1 view .LVU212
 333:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 694              		.loc 1 333 33 is_stmt 0 view .LVU213
 695 0070 1193     		str	r3, [sp, #68]
 334:Core/Src/main.c ****   {
 696              		.loc 1 334 3 is_stmt 1 view .LVU214
 334:Core/Src/main.c ****   {
 697              		.loc 1 334 7 is_stmt 0 view .LVU215
 698 0072 10A9     		add	r1, sp, #64
 699 0074 1F48     		ldr	r0, .L44
 700 0076 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 701              	.LVL30:
 334:Core/Src/main.c ****   {
 702              		.loc 1 334 6 view .LVU216
 703 007a 0028     		cmp	r0, #0
 704 007c 31D1     		bne	.L40
 338:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 705              		.loc 1 338 3 is_stmt 1 view .LVU217
 338:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 706              		.loc 1 338 20 is_stmt 0 view .LVU218
 707 007e 6023     		movs	r3, #96
 708 0080 0993     		str	r3, [sp, #36]
 339:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 29


 709              		.loc 1 339 3 is_stmt 1 view .LVU219
 339:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 710              		.loc 1 339 19 is_stmt 0 view .LVU220
 711 0082 0023     		movs	r3, #0
 712 0084 0A93     		str	r3, [sp, #40]
 340:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 713              		.loc 1 340 3 is_stmt 1 view .LVU221
 340:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 714              		.loc 1 340 24 is_stmt 0 view .LVU222
 715 0086 0B93     		str	r3, [sp, #44]
 341:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 716              		.loc 1 341 3 is_stmt 1 view .LVU223
 341:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 717              		.loc 1 341 25 is_stmt 0 view .LVU224
 718 0088 0C93     		str	r3, [sp, #48]
 342:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 719              		.loc 1 342 3 is_stmt 1 view .LVU225
 342:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 720              		.loc 1 342 24 is_stmt 0 view .LVU226
 721 008a 0D93     		str	r3, [sp, #52]
 343:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 722              		.loc 1 343 3 is_stmt 1 view .LVU227
 343:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 723              		.loc 1 343 25 is_stmt 0 view .LVU228
 724 008c 0E93     		str	r3, [sp, #56]
 344:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 725              		.loc 1 344 3 is_stmt 1 view .LVU229
 344:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 726              		.loc 1 344 26 is_stmt 0 view .LVU230
 727 008e 0F93     		str	r3, [sp, #60]
 345:Core/Src/main.c ****   {
 728              		.loc 1 345 3 is_stmt 1 view .LVU231
 345:Core/Src/main.c ****   {
 729              		.loc 1 345 7 is_stmt 0 view .LVU232
 730 0090 0022     		movs	r2, #0
 731 0092 09A9     		add	r1, sp, #36
 732 0094 1748     		ldr	r0, .L44
 733 0096 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 734              	.LVL31:
 345:Core/Src/main.c ****   {
 735              		.loc 1 345 6 view .LVU233
 736 009a 0028     		cmp	r0, #0
 737 009c 23D1     		bne	.L41
 349:Core/Src/main.c ****   {
 738              		.loc 1 349 3 is_stmt 1 view .LVU234
 349:Core/Src/main.c ****   {
 739              		.loc 1 349 7 is_stmt 0 view .LVU235
 740 009e 0822     		movs	r2, #8
 741 00a0 09A9     		add	r1, sp, #36
 742 00a2 1448     		ldr	r0, .L44
 743 00a4 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 744              	.LVL32:
 349:Core/Src/main.c ****   {
 745              		.loc 1 349 6 view .LVU236
 746 00a8 0028     		cmp	r0, #0
 747 00aa 1ED1     		bne	.L42
 353:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 30


 748              		.loc 1 353 3 is_stmt 1 view .LVU237
 353:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 749              		.loc 1 353 40 is_stmt 0 view .LVU238
 750 00ac 0023     		movs	r3, #0
 751 00ae 0193     		str	r3, [sp, #4]
 354:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 752              		.loc 1 354 3 is_stmt 1 view .LVU239
 354:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 753              		.loc 1 354 41 is_stmt 0 view .LVU240
 754 00b0 0293     		str	r3, [sp, #8]
 355:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 755              		.loc 1 355 3 is_stmt 1 view .LVU241
 355:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 756              		.loc 1 355 34 is_stmt 0 view .LVU242
 757 00b2 0393     		str	r3, [sp, #12]
 356:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 758              		.loc 1 356 3 is_stmt 1 view .LVU243
 356:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 759              		.loc 1 356 33 is_stmt 0 view .LVU244
 760 00b4 0493     		str	r3, [sp, #16]
 357:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 761              		.loc 1 357 3 is_stmt 1 view .LVU245
 357:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 762              		.loc 1 357 35 is_stmt 0 view .LVU246
 763 00b6 0593     		str	r3, [sp, #20]
 358:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 764              		.loc 1 358 3 is_stmt 1 view .LVU247
 358:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 765              		.loc 1 358 38 is_stmt 0 view .LVU248
 766 00b8 8022     		movs	r2, #128
 767 00ba 9201     		lsls	r2, r2, #6
 768 00bc 0692     		str	r2, [sp, #24]
 359:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 769              		.loc 1 359 3 is_stmt 1 view .LVU249
 359:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 770              		.loc 1 359 40 is_stmt 0 view .LVU250
 771 00be 0893     		str	r3, [sp, #32]
 360:Core/Src/main.c ****   {
 772              		.loc 1 360 3 is_stmt 1 view .LVU251
 360:Core/Src/main.c ****   {
 773              		.loc 1 360 7 is_stmt 0 view .LVU252
 774 00c0 01A9     		add	r1, sp, #4
 775 00c2 0C48     		ldr	r0, .L44
 776 00c4 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 777              	.LVL33:
 360:Core/Src/main.c ****   {
 778              		.loc 1 360 6 view .LVU253
 779 00c8 0028     		cmp	r0, #0
 780 00ca 10D1     		bne	.L43
 367:Core/Src/main.c **** 
 781              		.loc 1 367 3 is_stmt 1 view .LVU254
 782 00cc 0948     		ldr	r0, .L44
 783 00ce FFF7FEFF 		bl	HAL_TIM_MspPostInit
 784              	.LVL34:
 369:Core/Src/main.c **** 
 785              		.loc 1 369 1 is_stmt 0 view .LVU255
 786 00d2 17B0     		add	sp, sp, #92
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 31


 787              		@ sp needed
 788 00d4 00BD     		pop	{pc}
 789              	.L37:
 321:Core/Src/main.c ****   }
 790              		.loc 1 321 5 is_stmt 1 view .LVU256
 791 00d6 FFF7FEFF 		bl	Error_Handler
 792              	.LVL35:
 793              	.L38:
 326:Core/Src/main.c ****   }
 794              		.loc 1 326 5 view .LVU257
 795 00da FFF7FEFF 		bl	Error_Handler
 796              	.LVL36:
 797              	.L39:
 330:Core/Src/main.c ****   }
 798              		.loc 1 330 5 view .LVU258
 799 00de FFF7FEFF 		bl	Error_Handler
 800              	.LVL37:
 801              	.L40:
 336:Core/Src/main.c ****   }
 802              		.loc 1 336 5 view .LVU259
 803 00e2 FFF7FEFF 		bl	Error_Handler
 804              	.LVL38:
 805              	.L41:
 347:Core/Src/main.c ****   }
 806              		.loc 1 347 5 view .LVU260
 807 00e6 FFF7FEFF 		bl	Error_Handler
 808              	.LVL39:
 809              	.L42:
 351:Core/Src/main.c ****   }
 810              		.loc 1 351 5 view .LVU261
 811 00ea FFF7FEFF 		bl	Error_Handler
 812              	.LVL40:
 813              	.L43:
 362:Core/Src/main.c ****   }
 814              		.loc 1 362 5 view .LVU262
 815 00ee FFF7FEFF 		bl	Error_Handler
 816              	.LVL41:
 817              	.L45:
 818 00f2 C046     		.align	2
 819              	.L44:
 820 00f4 00000000 		.word	htim1
 821 00f8 002C0140 		.word	1073818624
 822 00fc BF030000 		.word	959
 823              		.cfi_endproc
 824              	.LFE44:
 826              		.section	.text.MX_TIM14_Init,"ax",%progbits
 827              		.align	1
 828              		.syntax unified
 829              		.code	16
 830              		.thumb_func
 832              	MX_TIM14_Init:
 833              	.LFB46:
 440:Core/Src/main.c **** 
 834              		.loc 1 440 1 view -0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 32


 838 0000 10B5     		push	{r4, lr}
 839              	.LCFI9:
 840              		.cfi_def_cfa_offset 8
 841              		.cfi_offset 4, -8
 842              		.cfi_offset 14, -4
 449:Core/Src/main.c ****   htim14.Init.Prescaler = 479;
 843              		.loc 1 449 3 view .LVU264
 449:Core/Src/main.c ****   htim14.Init.Prescaler = 479;
 844              		.loc 1 449 19 is_stmt 0 view .LVU265
 845 0002 0A48     		ldr	r0, .L49
 846 0004 0A4B     		ldr	r3, .L49+4
 847 0006 0360     		str	r3, [r0]
 450:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 848              		.loc 1 450 3 is_stmt 1 view .LVU266
 450:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 849              		.loc 1 450 25 is_stmt 0 view .LVU267
 850 0008 E023     		movs	r3, #224
 851 000a FF33     		adds	r3, r3, #255
 852 000c 4360     		str	r3, [r0, #4]
 451:Core/Src/main.c ****   htim14.Init.Period = 1000;
 853              		.loc 1 451 3 is_stmt 1 view .LVU268
 451:Core/Src/main.c ****   htim14.Init.Period = 1000;
 854              		.loc 1 451 27 is_stmt 0 view .LVU269
 855 000e 0023     		movs	r3, #0
 856 0010 8360     		str	r3, [r0, #8]
 452:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 857              		.loc 1 452 3 is_stmt 1 view .LVU270
 452:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 858              		.loc 1 452 22 is_stmt 0 view .LVU271
 859 0012 FA22     		movs	r2, #250
 860 0014 9200     		lsls	r2, r2, #2
 861 0016 C260     		str	r2, [r0, #12]
 453:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 862              		.loc 1 453 3 is_stmt 1 view .LVU272
 453:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 863              		.loc 1 453 29 is_stmt 0 view .LVU273
 864 0018 0361     		str	r3, [r0, #16]
 454:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 865              		.loc 1 454 3 is_stmt 1 view .LVU274
 454:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 866              		.loc 1 454 33 is_stmt 0 view .LVU275
 867 001a 8033     		adds	r3, r3, #128
 868 001c 8361     		str	r3, [r0, #24]
 455:Core/Src/main.c ****   {
 869              		.loc 1 455 3 is_stmt 1 view .LVU276
 455:Core/Src/main.c ****   {
 870              		.loc 1 455 7 is_stmt 0 view .LVU277
 871 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 872              	.LVL42:
 455:Core/Src/main.c ****   {
 873              		.loc 1 455 6 view .LVU278
 874 0022 0028     		cmp	r0, #0
 875 0024 00D1     		bne	.L48
 463:Core/Src/main.c **** 
 876              		.loc 1 463 1 view .LVU279
 877              		@ sp needed
 878 0026 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 33


 879              	.L48:
 457:Core/Src/main.c ****   }
 880              		.loc 1 457 5 is_stmt 1 view .LVU280
 881 0028 FFF7FEFF 		bl	Error_Handler
 882              	.LVL43:
 883              	.L50:
 884              		.align	2
 885              	.L49:
 886 002c 00000000 		.word	htim14
 887 0030 00200040 		.word	1073750016
 888              		.cfi_endproc
 889              	.LFE46:
 891              		.section	.text.MX_TIM3_Init,"ax",%progbits
 892              		.align	1
 893              		.syntax unified
 894              		.code	16
 895              		.thumb_func
 897              	MX_TIM3_Init:
 898              	.LFB45:
 377:Core/Src/main.c **** 
 899              		.loc 1 377 1 view -0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 56
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903 0000 00B5     		push	{lr}
 904              	.LCFI10:
 905              		.cfi_def_cfa_offset 4
 906              		.cfi_offset 14, -4
 907 0002 8FB0     		sub	sp, sp, #60
 908              	.LCFI11:
 909              		.cfi_def_cfa_offset 64
 383:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 910              		.loc 1 383 3 view .LVU282
 383:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 911              		.loc 1 383 26 is_stmt 0 view .LVU283
 912 0004 1022     		movs	r2, #16
 913 0006 0021     		movs	r1, #0
 914 0008 0AA8     		add	r0, sp, #40
 915 000a FFF7FEFF 		bl	memset
 916              	.LVL44:
 384:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 917              		.loc 1 384 3 is_stmt 1 view .LVU284
 384:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 918              		.loc 1 384 27 is_stmt 0 view .LVU285
 919 000e 0822     		movs	r2, #8
 920 0010 0021     		movs	r1, #0
 921 0012 08A8     		add	r0, sp, #32
 922 0014 FFF7FEFF 		bl	memset
 923              	.LVL45:
 385:Core/Src/main.c **** 
 924              		.loc 1 385 3 is_stmt 1 view .LVU286
 385:Core/Src/main.c **** 
 925              		.loc 1 385 22 is_stmt 0 view .LVU287
 926 0018 1C22     		movs	r2, #28
 927 001a 0021     		movs	r1, #0
 928 001c 01A8     		add	r0, sp, #4
 929 001e FFF7FEFF 		bl	memset
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 34


 930              	.LVL46:
 390:Core/Src/main.c ****   htim3.Init.Prescaler = 479;
 931              		.loc 1 390 3 is_stmt 1 view .LVU288
 390:Core/Src/main.c ****   htim3.Init.Prescaler = 479;
 932              		.loc 1 390 18 is_stmt 0 view .LVU289
 933 0022 2648     		ldr	r0, .L64
 934 0024 264B     		ldr	r3, .L64+4
 935 0026 0360     		str	r3, [r0]
 391:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 936              		.loc 1 391 3 is_stmt 1 view .LVU290
 391:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 937              		.loc 1 391 24 is_stmt 0 view .LVU291
 938 0028 E023     		movs	r3, #224
 939 002a FF33     		adds	r3, r3, #255
 940 002c 4360     		str	r3, [r0, #4]
 392:Core/Src/main.c ****   htim3.Init.Period = 1000;
 941              		.loc 1 392 3 is_stmt 1 view .LVU292
 392:Core/Src/main.c ****   htim3.Init.Period = 1000;
 942              		.loc 1 392 26 is_stmt 0 view .LVU293
 943 002e 0023     		movs	r3, #0
 944 0030 8360     		str	r3, [r0, #8]
 393:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 945              		.loc 1 393 3 is_stmt 1 view .LVU294
 393:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 946              		.loc 1 393 21 is_stmt 0 view .LVU295
 947 0032 FA22     		movs	r2, #250
 948 0034 9200     		lsls	r2, r2, #2
 949 0036 C260     		str	r2, [r0, #12]
 394:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 950              		.loc 1 394 3 is_stmt 1 view .LVU296
 394:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 951              		.loc 1 394 28 is_stmt 0 view .LVU297
 952 0038 0361     		str	r3, [r0, #16]
 395:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 953              		.loc 1 395 3 is_stmt 1 view .LVU298
 395:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 954              		.loc 1 395 32 is_stmt 0 view .LVU299
 955 003a 8361     		str	r3, [r0, #24]
 396:Core/Src/main.c ****   {
 956              		.loc 1 396 3 is_stmt 1 view .LVU300
 396:Core/Src/main.c ****   {
 957              		.loc 1 396 7 is_stmt 0 view .LVU301
 958 003c FFF7FEFF 		bl	HAL_TIM_Base_Init
 959              	.LVL47:
 396:Core/Src/main.c ****   {
 960              		.loc 1 396 6 view .LVU302
 961 0040 0028     		cmp	r0, #0
 962 0042 2FD1     		bne	.L58
 400:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 963              		.loc 1 400 3 is_stmt 1 view .LVU303
 400:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 964              		.loc 1 400 34 is_stmt 0 view .LVU304
 965 0044 8023     		movs	r3, #128
 966 0046 5B01     		lsls	r3, r3, #5
 967 0048 0A93     		str	r3, [sp, #40]
 401:Core/Src/main.c ****   {
 968              		.loc 1 401 3 is_stmt 1 view .LVU305
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 35


 401:Core/Src/main.c ****   {
 969              		.loc 1 401 7 is_stmt 0 view .LVU306
 970 004a 0AA9     		add	r1, sp, #40
 971 004c 1B48     		ldr	r0, .L64
 972 004e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 973              	.LVL48:
 401:Core/Src/main.c ****   {
 974              		.loc 1 401 6 view .LVU307
 975 0052 0028     		cmp	r0, #0
 976 0054 28D1     		bne	.L59
 405:Core/Src/main.c ****   {
 977              		.loc 1 405 3 is_stmt 1 view .LVU308
 405:Core/Src/main.c ****   {
 978              		.loc 1 405 7 is_stmt 0 view .LVU309
 979 0056 1948     		ldr	r0, .L64
 980 0058 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 981              	.LVL49:
 405:Core/Src/main.c ****   {
 982              		.loc 1 405 6 view .LVU310
 983 005c 0028     		cmp	r0, #0
 984 005e 25D1     		bne	.L60
 409:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 985              		.loc 1 409 3 is_stmt 1 view .LVU311
 409:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 986              		.loc 1 409 37 is_stmt 0 view .LVU312
 987 0060 0023     		movs	r3, #0
 988 0062 0893     		str	r3, [sp, #32]
 410:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 989              		.loc 1 410 3 is_stmt 1 view .LVU313
 410:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 990              		.loc 1 410 33 is_stmt 0 view .LVU314
 991 0064 0993     		str	r3, [sp, #36]
 411:Core/Src/main.c ****   {
 992              		.loc 1 411 3 is_stmt 1 view .LVU315
 411:Core/Src/main.c ****   {
 993              		.loc 1 411 7 is_stmt 0 view .LVU316
 994 0066 08A9     		add	r1, sp, #32
 995 0068 1448     		ldr	r0, .L64
 996 006a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 997              	.LVL50:
 411:Core/Src/main.c ****   {
 998              		.loc 1 411 6 view .LVU317
 999 006e 0028     		cmp	r0, #0
 1000 0070 1ED1     		bne	.L61
 415:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1001              		.loc 1 415 3 is_stmt 1 view .LVU318
 415:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1002              		.loc 1 415 20 is_stmt 0 view .LVU319
 1003 0072 6023     		movs	r3, #96
 1004 0074 0193     		str	r3, [sp, #4]
 416:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1005              		.loc 1 416 3 is_stmt 1 view .LVU320
 416:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1006              		.loc 1 416 19 is_stmt 0 view .LVU321
 1007 0076 0023     		movs	r3, #0
 1008 0078 0293     		str	r3, [sp, #8]
 417:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 36


 1009              		.loc 1 417 3 is_stmt 1 view .LVU322
 417:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1010              		.loc 1 417 24 is_stmt 0 view .LVU323
 1011 007a 0393     		str	r3, [sp, #12]
 418:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1012              		.loc 1 418 3 is_stmt 1 view .LVU324
 418:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1013              		.loc 1 418 24 is_stmt 0 view .LVU325
 1014 007c 0593     		str	r3, [sp, #20]
 419:Core/Src/main.c ****   {
 1015              		.loc 1 419 3 is_stmt 1 view .LVU326
 419:Core/Src/main.c ****   {
 1016              		.loc 1 419 7 is_stmt 0 view .LVU327
 1017 007e 0022     		movs	r2, #0
 1018 0080 01A9     		add	r1, sp, #4
 1019 0082 0E48     		ldr	r0, .L64
 1020 0084 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1021              	.LVL51:
 419:Core/Src/main.c ****   {
 1022              		.loc 1 419 6 view .LVU328
 1023 0088 0028     		cmp	r0, #0
 1024 008a 13D1     		bne	.L62
 423:Core/Src/main.c ****   {
 1025              		.loc 1 423 3 is_stmt 1 view .LVU329
 423:Core/Src/main.c ****   {
 1026              		.loc 1 423 7 is_stmt 0 view .LVU330
 1027 008c 0422     		movs	r2, #4
 1028 008e 01A9     		add	r1, sp, #4
 1029 0090 0A48     		ldr	r0, .L64
 1030 0092 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1031              	.LVL52:
 423:Core/Src/main.c ****   {
 1032              		.loc 1 423 6 view .LVU331
 1033 0096 0028     		cmp	r0, #0
 1034 0098 0ED1     		bne	.L63
 430:Core/Src/main.c **** 
 1035              		.loc 1 430 3 is_stmt 1 view .LVU332
 1036 009a 0848     		ldr	r0, .L64
 1037 009c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1038              	.LVL53:
 432:Core/Src/main.c **** 
 1039              		.loc 1 432 1 is_stmt 0 view .LVU333
 1040 00a0 0FB0     		add	sp, sp, #60
 1041              		@ sp needed
 1042 00a2 00BD     		pop	{pc}
 1043              	.L58:
 398:Core/Src/main.c ****   }
 1044              		.loc 1 398 5 is_stmt 1 view .LVU334
 1045 00a4 FFF7FEFF 		bl	Error_Handler
 1046              	.LVL54:
 1047              	.L59:
 403:Core/Src/main.c ****   }
 1048              		.loc 1 403 5 view .LVU335
 1049 00a8 FFF7FEFF 		bl	Error_Handler
 1050              	.LVL55:
 1051              	.L60:
 407:Core/Src/main.c ****   }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 37


 1052              		.loc 1 407 5 view .LVU336
 1053 00ac FFF7FEFF 		bl	Error_Handler
 1054              	.LVL56:
 1055              	.L61:
 413:Core/Src/main.c ****   }
 1056              		.loc 1 413 5 view .LVU337
 1057 00b0 FFF7FEFF 		bl	Error_Handler
 1058              	.LVL57:
 1059              	.L62:
 421:Core/Src/main.c ****   }
 1060              		.loc 1 421 5 view .LVU338
 1061 00b4 FFF7FEFF 		bl	Error_Handler
 1062              	.LVL58:
 1063              	.L63:
 425:Core/Src/main.c ****   }
 1064              		.loc 1 425 5 view .LVU339
 1065 00b8 FFF7FEFF 		bl	Error_Handler
 1066              	.LVL59:
 1067              	.L65:
 1068              		.align	2
 1069              	.L64:
 1070 00bc 00000000 		.word	htim3
 1071 00c0 00040040 		.word	1073742848
 1072              		.cfi_endproc
 1073              	.LFE45:
 1075              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1076              		.align	1
 1077              		.syntax unified
 1078              		.code	16
 1079              		.thumb_func
 1081              	MX_USART1_UART_Init:
 1082              	.LFB48:
 503:Core/Src/main.c **** 
 1083              		.loc 1 503 1 view -0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087 0000 10B5     		push	{r4, lr}
 1088              	.LCFI12:
 1089              		.cfi_def_cfa_offset 8
 1090              		.cfi_offset 4, -8
 1091              		.cfi_offset 14, -4
 512:Core/Src/main.c ****   huart1.Init.BaudRate = 38400;
 1092              		.loc 1 512 3 view .LVU341
 512:Core/Src/main.c ****   huart1.Init.BaudRate = 38400;
 1093              		.loc 1 512 19 is_stmt 0 view .LVU342
 1094 0002 0B48     		ldr	r0, .L69
 1095 0004 0B4B     		ldr	r3, .L69+4
 1096 0006 0360     		str	r3, [r0]
 513:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1097              		.loc 1 513 3 is_stmt 1 view .LVU343
 513:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1098              		.loc 1 513 24 is_stmt 0 view .LVU344
 1099 0008 9623     		movs	r3, #150
 1100 000a 1B02     		lsls	r3, r3, #8
 1101 000c 4360     		str	r3, [r0, #4]
 514:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 38


 1102              		.loc 1 514 3 is_stmt 1 view .LVU345
 514:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1103              		.loc 1 514 26 is_stmt 0 view .LVU346
 1104 000e 0023     		movs	r3, #0
 1105 0010 8360     		str	r3, [r0, #8]
 515:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1106              		.loc 1 515 3 is_stmt 1 view .LVU347
 515:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1107              		.loc 1 515 24 is_stmt 0 view .LVU348
 1108 0012 C360     		str	r3, [r0, #12]
 516:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1109              		.loc 1 516 3 is_stmt 1 view .LVU349
 516:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1110              		.loc 1 516 22 is_stmt 0 view .LVU350
 1111 0014 0361     		str	r3, [r0, #16]
 517:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1112              		.loc 1 517 3 is_stmt 1 view .LVU351
 517:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1113              		.loc 1 517 20 is_stmt 0 view .LVU352
 1114 0016 0C22     		movs	r2, #12
 1115 0018 4261     		str	r2, [r0, #20]
 518:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1116              		.loc 1 518 3 is_stmt 1 view .LVU353
 518:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1117              		.loc 1 518 25 is_stmt 0 view .LVU354
 1118 001a 8361     		str	r3, [r0, #24]
 519:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1119              		.loc 1 519 3 is_stmt 1 view .LVU355
 519:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1120              		.loc 1 519 28 is_stmt 0 view .LVU356
 1121 001c C361     		str	r3, [r0, #28]
 520:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1122              		.loc 1 520 3 is_stmt 1 view .LVU357
 520:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1123              		.loc 1 520 30 is_stmt 0 view .LVU358
 1124 001e 0362     		str	r3, [r0, #32]
 521:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1125              		.loc 1 521 3 is_stmt 1 view .LVU359
 521:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1126              		.loc 1 521 38 is_stmt 0 view .LVU360
 1127 0020 4362     		str	r3, [r0, #36]
 522:Core/Src/main.c ****   {
 1128              		.loc 1 522 3 is_stmt 1 view .LVU361
 522:Core/Src/main.c ****   {
 1129              		.loc 1 522 7 is_stmt 0 view .LVU362
 1130 0022 FFF7FEFF 		bl	HAL_UART_Init
 1131              	.LVL60:
 522:Core/Src/main.c ****   {
 1132              		.loc 1 522 6 view .LVU363
 1133 0026 0028     		cmp	r0, #0
 1134 0028 00D1     		bne	.L68
 530:Core/Src/main.c **** 
 1135              		.loc 1 530 1 view .LVU364
 1136              		@ sp needed
 1137 002a 10BD     		pop	{r4, pc}
 1138              	.L68:
 524:Core/Src/main.c ****   }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 39


 1139              		.loc 1 524 5 is_stmt 1 view .LVU365
 1140 002c FFF7FEFF 		bl	Error_Handler
 1141              	.LVL61:
 1142              	.L70:
 1143              		.align	2
 1144              	.L69:
 1145 0030 00000000 		.word	huart1
 1146 0034 00380140 		.word	1073821696
 1147              		.cfi_endproc
 1148              	.LFE48:
 1150              		.section	.text.SystemClock_Config,"ax",%progbits
 1151              		.align	1
 1152              		.global	SystemClock_Config
 1153              		.syntax unified
 1154              		.code	16
 1155              		.thumb_func
 1157              	SystemClock_Config:
 1158              	.LFB41:
 139:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1159              		.loc 1 139 1 view -0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 80
 1162              		@ frame_needed = 0, uses_anonymous_args = 0
 1163 0000 10B5     		push	{r4, lr}
 1164              	.LCFI13:
 1165              		.cfi_def_cfa_offset 8
 1166              		.cfi_offset 4, -8
 1167              		.cfi_offset 14, -4
 1168 0002 94B0     		sub	sp, sp, #80
 1169              	.LCFI14:
 1170              		.cfi_def_cfa_offset 88
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1171              		.loc 1 140 3 view .LVU367
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1172              		.loc 1 140 22 is_stmt 0 view .LVU368
 1173 0004 3022     		movs	r2, #48
 1174 0006 0021     		movs	r1, #0
 1175 0008 08A8     		add	r0, sp, #32
 1176 000a FFF7FEFF 		bl	memset
 1177              	.LVL62:
 141:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1178              		.loc 1 141 3 is_stmt 1 view .LVU369
 141:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1179              		.loc 1 141 22 is_stmt 0 view .LVU370
 1180 000e 1024     		movs	r4, #16
 1181 0010 1022     		movs	r2, #16
 1182 0012 0021     		movs	r1, #0
 1183 0014 04A8     		add	r0, sp, #16
 1184 0016 FFF7FEFF 		bl	memset
 1185              	.LVL63:
 142:Core/Src/main.c **** 
 1186              		.loc 1 142 3 is_stmt 1 view .LVU371
 142:Core/Src/main.c **** 
 1187              		.loc 1 142 28 is_stmt 0 view .LVU372
 1188 001a 1022     		movs	r2, #16
 1189 001c 0021     		movs	r1, #0
 1190 001e 6846     		mov	r0, sp
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 40


 1191 0020 FFF7FEFF 		bl	memset
 1192              	.LVL64:
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1193              		.loc 1 147 3 is_stmt 1 view .LVU373
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1194              		.loc 1 147 36 is_stmt 0 view .LVU374
 1195 0024 1223     		movs	r3, #18
 1196 0026 0893     		str	r3, [sp, #32]
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 1197              		.loc 1 148 3 is_stmt 1 view .LVU375
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 1198              		.loc 1 148 30 is_stmt 0 view .LVU376
 1199 0028 113B     		subs	r3, r3, #17
 1200 002a 0B93     		str	r3, [sp, #44]
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1201              		.loc 1 149 3 is_stmt 1 view .LVU377
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1202              		.loc 1 149 32 is_stmt 0 view .LVU378
 1203 002c 0D93     		str	r3, [sp, #52]
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 1204              		.loc 1 150 3 is_stmt 1 view .LVU379
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 1205              		.loc 1 150 41 is_stmt 0 view .LVU380
 1206 002e 0C94     		str	r4, [sp, #48]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1207              		.loc 1 151 3 is_stmt 1 view .LVU381
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1208              		.loc 1 151 43 is_stmt 0 view .LVU382
 1209 0030 0E94     		str	r4, [sp, #56]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1210              		.loc 1 152 3 is_stmt 1 view .LVU383
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1211              		.loc 1 152 34 is_stmt 0 view .LVU384
 1212 0032 0133     		adds	r3, r3, #1
 1213 0034 1093     		str	r3, [sp, #64]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 1214              		.loc 1 153 3 is_stmt 1 view .LVU385
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1215              		.loc 1 154 3 view .LVU386
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1216              		.loc 1 154 32 is_stmt 0 view .LVU387
 1217 0036 A023     		movs	r3, #160
 1218 0038 9B03     		lsls	r3, r3, #14
 1219 003a 1293     		str	r3, [sp, #72]
 155:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1220              		.loc 1 155 3 is_stmt 1 view .LVU388
 156:Core/Src/main.c ****   {
 1221              		.loc 1 156 3 view .LVU389
 156:Core/Src/main.c ****   {
 1222              		.loc 1 156 7 is_stmt 0 view .LVU390
 1223 003c 08A8     		add	r0, sp, #32
 1224 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1225              	.LVL65:
 156:Core/Src/main.c ****   {
 1226              		.loc 1 156 6 view .LVU391
 1227 0042 0028     		cmp	r0, #0
 1228 0044 18D1     		bne	.L75
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 41


 163:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1229              		.loc 1 163 3 is_stmt 1 view .LVU392
 163:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1230              		.loc 1 163 31 is_stmt 0 view .LVU393
 1231 0046 0723     		movs	r3, #7
 1232 0048 0493     		str	r3, [sp, #16]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1233              		.loc 1 165 3 is_stmt 1 view .LVU394
 165:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1234              		.loc 1 165 34 is_stmt 0 view .LVU395
 1235 004a 053B     		subs	r3, r3, #5
 1236 004c 0593     		str	r3, [sp, #20]
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1237              		.loc 1 166 3 is_stmt 1 view .LVU396
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1238              		.loc 1 166 35 is_stmt 0 view .LVU397
 1239 004e 0023     		movs	r3, #0
 1240 0050 0693     		str	r3, [sp, #24]
 167:Core/Src/main.c **** 
 1241              		.loc 1 167 3 is_stmt 1 view .LVU398
 167:Core/Src/main.c **** 
 1242              		.loc 1 167 36 is_stmt 0 view .LVU399
 1243 0052 0793     		str	r3, [sp, #28]
 169:Core/Src/main.c ****   {
 1244              		.loc 1 169 3 is_stmt 1 view .LVU400
 169:Core/Src/main.c ****   {
 1245              		.loc 1 169 7 is_stmt 0 view .LVU401
 1246 0054 0121     		movs	r1, #1
 1247 0056 04A8     		add	r0, sp, #16
 1248 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1249              	.LVL66:
 169:Core/Src/main.c ****   {
 1250              		.loc 1 169 6 view .LVU402
 1251 005c 0028     		cmp	r0, #0
 1252 005e 0DD1     		bne	.L76
 173:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 1253              		.loc 1 173 3 is_stmt 1 view .LVU403
 173:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 1254              		.loc 1 173 38 is_stmt 0 view .LVU404
 1255 0060 2123     		movs	r3, #33
 1256 0062 0093     		str	r3, [sp]
 174:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 1257              		.loc 1 174 3 is_stmt 1 view .LVU405
 174:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 1258              		.loc 1 174 38 is_stmt 0 view .LVU406
 1259 0064 0023     		movs	r3, #0
 1260 0066 0293     		str	r3, [sp, #8]
 175:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1261              		.loc 1 175 3 is_stmt 1 view .LVU407
 175:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1262              		.loc 1 175 36 is_stmt 0 view .LVU408
 1263 0068 0393     		str	r3, [sp, #12]
 176:Core/Src/main.c ****   {
 1264              		.loc 1 176 3 is_stmt 1 view .LVU409
 176:Core/Src/main.c ****   {
 1265              		.loc 1 176 7 is_stmt 0 view .LVU410
 1266 006a 6846     		mov	r0, sp
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 42


 1267 006c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1268              	.LVL67:
 176:Core/Src/main.c ****   {
 1269              		.loc 1 176 6 view .LVU411
 1270 0070 0028     		cmp	r0, #0
 1271 0072 05D1     		bne	.L77
 180:Core/Src/main.c **** 
 1272              		.loc 1 180 1 view .LVU412
 1273 0074 14B0     		add	sp, sp, #80
 1274              		@ sp needed
 1275 0076 10BD     		pop	{r4, pc}
 1276              	.L75:
 158:Core/Src/main.c ****   }
 1277              		.loc 1 158 5 is_stmt 1 view .LVU413
 1278 0078 FFF7FEFF 		bl	Error_Handler
 1279              	.LVL68:
 1280              	.L76:
 171:Core/Src/main.c ****   }
 1281              		.loc 1 171 5 view .LVU414
 1282 007c FFF7FEFF 		bl	Error_Handler
 1283              	.LVL69:
 1284              	.L77:
 178:Core/Src/main.c ****   }
 1285              		.loc 1 178 5 view .LVU415
 1286 0080 FFF7FEFF 		bl	Error_Handler
 1287              	.LVL70:
 1288              		.cfi_endproc
 1289              	.LFE41:
 1291              		.section	.text.main,"ax",%progbits
 1292              		.align	1
 1293              		.global	main
 1294              		.syntax unified
 1295              		.code	16
 1296              		.thumb_func
 1298              	main:
 1299              	.LFB40:
  82:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 1300              		.loc 1 82 1 view -0
 1301              		.cfi_startproc
 1302              		@ Volatile: function does not return.
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305 0000 70B5     		push	{r4, r5, r6, lr}
 1306              	.LCFI15:
 1307              		.cfi_def_cfa_offset 16
 1308              		.cfi_offset 4, -16
 1309              		.cfi_offset 5, -12
 1310              		.cfi_offset 6, -8
 1311              		.cfi_offset 14, -4
  90:Core/Src/main.c **** 
 1312              		.loc 1 90 5 view .LVU417
 1313 0002 FFF7FEFF 		bl	HAL_Init
 1314              	.LVL71:
  97:Core/Src/main.c **** 
 1315              		.loc 1 97 5 view .LVU418
 1316 0006 FFF7FEFF 		bl	SystemClock_Config
 1317              	.LVL72:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 43


 104:Core/Src/main.c ****     MX_ADC_Init();
 1318              		.loc 1 104 5 view .LVU419
 1319 000a FFF7FEFF 		bl	MX_GPIO_Init
 1320              	.LVL73:
 105:Core/Src/main.c ****     MX_TIM16_Init();
 1321              		.loc 1 105 5 view .LVU420
 1322 000e FFF7FEFF 		bl	MX_ADC_Init
 1323              	.LVL74:
 106:Core/Src/main.c ****  	  MX_I2C1_Init();
 1324              		.loc 1 106 5 view .LVU421
 1325 0012 FFF7FEFF 		bl	MX_TIM16_Init
 1326              	.LVL75:
 107:Core/Src/main.c ****  	  MX_TIM1_Init();
 1327              		.loc 1 107 5 view .LVU422
 1328 0016 FFF7FEFF 		bl	MX_I2C1_Init
 1329              	.LVL76:
 108:Core/Src/main.c ****   	MX_TIM14_Init();
 1330              		.loc 1 108 5 view .LVU423
 1331 001a FFF7FEFF 		bl	MX_TIM1_Init
 1332              	.LVL77:
 109:Core/Src/main.c ****     MX_TIM3_Init();
 1333              		.loc 1 109 4 view .LVU424
 1334 001e FFF7FEFF 		bl	MX_TIM14_Init
 1335              	.LVL78:
 110:Core/Src/main.c ****     MX_USART1_UART_Init();
 1336              		.loc 1 110 5 view .LVU425
 1337 0022 FFF7FEFF 		bl	MX_TIM3_Init
 1338              	.LVL79:
 111:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 1339              		.loc 1 111 5 view .LVU426
 1340 0026 FFF7FEFF 		bl	MX_USART1_UART_Init
 1341              	.LVL80:
 113:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim3);
 1342              		.loc 1 113 5 view .LVU427
 1343 002a 134C     		ldr	r4, .L80
 1344 002c 2000     		movs	r0, r4
 1345 002e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1346              	.LVL81:
 114:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim14);
 1347              		.loc 1 114 5 view .LVU428
 1348 0032 124D     		ldr	r5, .L80+4
 1349 0034 2800     		movs	r0, r5
 1350 0036 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1351              	.LVL82:
 115:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim16);
 1352              		.loc 1 115 5 view .LVU429
 1353 003a 1148     		ldr	r0, .L80+8
 1354 003c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1355              	.LVL83:
 116:Core/Src/main.c ****     HAL_Delay(1000);
 1356              		.loc 1 116 5 view .LVU430
 1357 0040 1048     		ldr	r0, .L80+12
 1358 0042 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1359              	.LVL84:
 117:Core/Src/main.c **** 	  Os_Init_Task();
 1360              		.loc 1 117 5 view .LVU431
 1361 0046 FA20     		movs	r0, #250
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 44


 1362 0048 8000     		lsls	r0, r0, #2
 1363 004a FFF7FEFF 		bl	HAL_Delay
 1364              	.LVL85:
 118:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_1);
 1365              		.loc 1 118 4 view .LVU432
 1366 004e FFF7FEFF 		bl	Os_Init_Task
 1367              	.LVL86:
 119:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_2);
 1368              		.loc 1 119 5 view .LVU433
 1369 0052 0021     		movs	r1, #0
 1370 0054 2800     		movs	r0, r5
 1371 0056 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1372              	.LVL87:
 120:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_1);
 1373              		.loc 1 120 5 view .LVU434
 1374 005a 0421     		movs	r1, #4
 1375 005c 2800     		movs	r0, r5
 1376 005e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1377              	.LVL88:
 121:Core/Src/main.c ****     HAL_TIMEx_PWMN_Start(&htim1,TIM_CHANNEL_3);
 1378              		.loc 1 121 5 view .LVU435
 1379 0062 0021     		movs	r1, #0
 1380 0064 2000     		movs	r0, r4
 1381 0066 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1382              	.LVL89:
 122:Core/Src/main.c ****     /* USER CODE END 2 */
 1383              		.loc 1 122 5 view .LVU436
 1384 006a 0821     		movs	r1, #8
 1385 006c 2000     		movs	r0, r4
 1386 006e FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 1387              	.LVL90:
 1388              	.L79:
 127:Core/Src/main.c ****     {
 1389              		.loc 1 127 5 discriminator 1 view .LVU437
 129:Core/Src/main.c ****     }
 1390              		.loc 1 129 9 discriminator 1 view .LVU438
 1391 0072 FFF7FEFF 		bl	Os_Handler
 1392              	.LVL91:
 127:Core/Src/main.c ****     {
 1393              		.loc 1 127 11 discriminator 1 view .LVU439
 1394 0076 FCE7     		b	.L79
 1395              	.L81:
 1396              		.align	2
 1397              	.L80:
 1398 0078 00000000 		.word	htim1
 1399 007c 00000000 		.word	htim3
 1400 0080 00000000 		.word	htim14
 1401 0084 00000000 		.word	htim16
 1402              		.cfi_endproc
 1403              	.LFE40:
 1405              		.global	huart1
 1406              		.global	htim16
 1407              		.global	htim14
 1408              		.global	htim3
 1409              		.global	htim1
 1410              		.global	hi2c1
 1411              		.global	hadc
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 45


 1412              		.section	.bss.hadc,"aw",%nobits
 1413              		.align	2
 1414              		.set	.LANCHOR0,. + 0
 1417              	hadc:
 1418 0000 00000000 		.space	64
 1418      00000000 
 1418      00000000 
 1418      00000000 
 1418      00000000 
 1419              		.section	.bss.hi2c1,"aw",%nobits
 1420              		.align	2
 1421              		.set	.LANCHOR1,. + 0
 1424              	hi2c1:
 1425 0000 00000000 		.space	76
 1425      00000000 
 1425      00000000 
 1425      00000000 
 1425      00000000 
 1426              		.section	.bss.htim1,"aw",%nobits
 1427              		.align	2
 1430              	htim1:
 1431 0000 00000000 		.space	180
 1431      00000000 
 1431      00000000 
 1431      00000000 
 1431      00000000 
 1432              		.section	.bss.htim14,"aw",%nobits
 1433              		.align	2
 1436              	htim14:
 1437 0000 00000000 		.space	180
 1437      00000000 
 1437      00000000 
 1437      00000000 
 1437      00000000 
 1438              		.section	.bss.htim16,"aw",%nobits
 1439              		.align	2
 1442              	htim16:
 1443 0000 00000000 		.space	180
 1443      00000000 
 1443      00000000 
 1443      00000000 
 1443      00000000 
 1444              		.section	.bss.htim3,"aw",%nobits
 1445              		.align	2
 1448              	htim3:
 1449 0000 00000000 		.space	180
 1449      00000000 
 1449      00000000 
 1449      00000000 
 1449      00000000 
 1450              		.section	.bss.huart1,"aw",%nobits
 1451              		.align	2
 1454              	huart1:
 1455 0000 00000000 		.space	132
 1455      00000000 
 1455      00000000 
 1455      00000000 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 46


 1455      00000000 
 1456              		.text
 1457              	.Letext0:
 1458              		.file 3 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1459              		.file 4 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1460              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 1461              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 1462              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1463              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1464              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 1465              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1466              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 1467              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 1468              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c.h"
 1469              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 1470              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 1471              		.file 16 "Core/Inc/main.h"
 1472              		.file 17 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 1473              		.file 18 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c_ex.h"
 1474              		.file 19 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1475              		.file 20 "Core/Inc/os.h"
 1476              		.file 21 "<built-in>"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 47


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:231    .text.MX_GPIO_Init:000000e0 $d
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:240    .text.Error_Handler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:246    .text.Error_Handler:00000000 Error_Handler
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:278    .text.MX_ADC_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:283    .text.MX_ADC_Init:00000000 MX_ADC_Init
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:416    .text.MX_ADC_Init:00000080 $d
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:422    .text.MX_TIM16_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:427    .text.MX_TIM16_Init:00000000 MX_TIM16_Init
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:482    .text.MX_TIM16_Init:0000002c $d
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1442   .bss.htim16:00000000 htim16
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:488    .text.MX_I2C1_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:493    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:579    .text.MX_I2C1_Init:0000004c $d
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:586    .text.MX_TIM1_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:591    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:820    .text.MX_TIM1_Init:000000f4 $d
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1430   .bss.htim1:00000000 htim1
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:827    .text.MX_TIM14_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:832    .text.MX_TIM14_Init:00000000 MX_TIM14_Init
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:886    .text.MX_TIM14_Init:0000002c $d
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1436   .bss.htim14:00000000 htim14
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:892    .text.MX_TIM3_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:897    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1070   .text.MX_TIM3_Init:000000bc $d
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1448   .bss.htim3:00000000 htim3
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1076   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1081   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1145   .text.MX_USART1_UART_Init:00000030 $d
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1454   .bss.huart1:00000000 huart1
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1151   .text.SystemClock_Config:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1157   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1292   .text.main:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1298   .text.main:00000000 main
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1398   .text.main:00000078 $d
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1424   .bss.hi2c1:00000000 hi2c1
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1417   .bss.hadc:00000000 hadc
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1413   .bss.hadc:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1420   .bss.hi2c1:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1427   .bss.htim1:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1433   .bss.htim14:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1439   .bss.htim16:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1445   .bss.htim3:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s:1451   .bss.huart1:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNZrwxc.s 			page 48


HAL_I2CEx_ConfigDigitalFilter
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_TIM_Base_Start_IT
HAL_Delay
Os_Init_Task
HAL_TIM_PWM_Start
HAL_TIMEx_PWMN_Start
Os_Handler
